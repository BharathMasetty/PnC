/*
 * Automatically Generated from Mathematica.
 * Thu 16 Aug 2018 23:22:02 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_RightFootFront.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,16> &p_output1, const Eigen::Matrix<double,16,1> &var1)
{
  double t605;
  double t140;
  double t213;
  double t298;
  double t460;
  double t1252;
  double t1076;
  double t1094;
  double t1277;
  double t797;
  double t883;
  double t900;
  double t985;
  double t96;
  double t1609;
  double t1626;
  double t1669;
  double t1246;
  double t1316;
  double t1317;
  double t1882;
  double t1959;
  double t2014;
  double t2085;
  double t2116;
  double t2131;
  double t2230;
  double t2427;
  double t2478;
  double t2509;
  double t2851;
  double t2941;
  double t2966;
  double t3089;
  double t3138;
  double t3150;
  double t3191;
  double t3487;
  double t3493;
  double t3498;
  double t3566;
  double t3568;
  double t3569;
  double t3659;
  double t3670;
  double t3682;
  double t3749;
  double t4120;
  double t4140;
  double t4144;
  double t4235;
  double t4240;
  double t4256;
  double t429;
  double t511;
  double t529;
  double t966;
  double t986;
  double t1050;
  double t1418;
  double t1509;
  double t1535;
  double t1713;
  double t1793;
  double t1841;
  double t4679;
  double t4692;
  double t4773;
  double t2139;
  double t2268;
  double t2403;
  double t4580;
  double t4648;
  double t4654;
  double t4788;
  double t4915;
  double t4929;
  double t2819;
  double t2841;
  double t2842;
  double t3174;
  double t3390;
  double t3440;
  double t5009;
  double t5011;
  double t5030;
  double t5135;
  double t5152;
  double t5165;
  double t3516;
  double t3539;
  double t3563;
  double t3710;
  double t4040;
  double t4103;
  double t5234;
  double t5266;
  double t5297;
  double t5312;
  double t5319;
  double t5354;
  double t4219;
  double t4223;
  double t4224;
  double t5397;
  double t5423;
  double t5434;
  double t5451;
  double t5452;
  double t5464;
  double t5593;
  double t5603;
  double t5643;
  double t5717;
  double t5721;
  double t5760;
  double t5909;
  double t5928;
  double t5963;
  double t5978;
  double t5980;
  double t5986;
  double t5998;
  double t6042;
  double t6073;
  double t6118;
  double t6120;
  double t6129;
  double t6168;
  double t6216;
  double t6218;
  double t6470;
  double t6504;
  double t6507;
  double t6519;
  double t6529;
  double t6559;
  double t6623;
  double t6637;
  double t6647;
  double t6700;
  double t6723;
  double t6724;
  double t6736;
  double t6744;
  double t6755;
  double t6757;
  double t6763;
  double t6766;
  double t6782;
  double t6784;
  double t6790;
  double t6914;
  double t6915;
  double t6919;
  double t6935;
  double t6941;
  double t6947;
  double t6993;
  double t6996;
  double t6999;
  double t7005;
  double t7006;
  double t7010;
  double t7015;
  double t7026;
  double t7035;
  double t7064;
  double t7071;
  double t7078;
  double t7087;
  double t7089;
  double t7097;
  double t7245;
  double t7251;
  double t7254;
  double t7258;
  double t7263;
  double t7265;
  double t7281;
  double t7282;
  double t7291;
  double t7301;
  double t7302;
  double t7318;
  double t7328;
  double t7339;
  double t7348;
  double t7355;
  double t7358;
  double t7365;
  double t7444;
  double t7467;
  double t7468;
  double t7523;
  double t7527;
  double t7530;
  double t7557;
  double t7560;
  double t7563;
  double t7570;
  double t7576;
  double t7577;
  double t7591;
  double t7599;
  double t7608;
  double t7630;
  double t7633;
  double t7635;
  double t7716;
  double t7722;
  double t7731;
  double t7760;
  double t7761;
  double t7764;
  double t7772;
  double t7778;
  double t7780;
  double t7806;
  double t7821;
  double t7827;
  double t7848;
  double t7854;
  double t7856;
  double t7937;
  double t7950;
  double t7954;
  double t7966;
  double t7975;
  double t7976;
  double t7982;
  double t7985;
  double t7988;
  double t8004;
  double t8010;
  double t8011;
  double t8033;
  double t8034;
  double t8035;
  double t7884;
  double t7889;
  double t7897;
  double t7915;
  double t7919;
  double t8113;
  double t8117;
  double t8122;
  double t8136;
  double t8152;
  double t8128;
  double t8129;
  double t8130;
  double t8161;
  double t8166;
  double t8170;
  double t8215;
  double t8223;
  double t8239;
  double t8263;
  double t8293;
  double t8306;
  double t8313;
  double t8329;
  double t8333;
  double t8497;
  double t8498;
  double t8500;
  double t8477;
  double t8484;
  double t8485;
  double t8519;
  double t8520;
  double t8533;
  double t8554;
  double t8562;
  double t8563;
  double t8573;
  double t8584;
  double t8615;
  double t8620;
  double t8636;
  double t8642;
  double t8724;
  double t8725;
  double t8726;
  double t8751;
  double t8758;
  double t8766;
  double t8776;
  double t8783;
  double t8787;
  double t8699;
  double t8703;
  double t8706;
  double t8709;
  double t8715;
  double t8879;
  double t8884;
  double t8895;
  double t8922;
  double t8924;
  double t8929;
  double t8956;
  double t8957;
  double t8960;
  double t9055;
  double t9063;
  double t9083;
  double t9177;
  double t9178;
  double t9193;
  double t9201;
  double t9210;
  double t9215;
  double t9354;
  double t9356;
  double t9361;
  double t9390;
  double t9391;
  double t9402;
  double t9426;
  double t9429;
  double t9282;
  double t9307;
  double t9318;
  double t9341;
  double t9343;
  double t8904;
  double t8905;
  double t8907;
  double t9456;
  double t9461;
  double t9464;
  double t9500;
  double t9510;
  double t9518;
  double t9525;
  double t9539;
  double t9576;
  double t9597;
  double t9599;
  double t9610;
  double t9633;
  double t9637;
  double t9638;
  double t9120;
  double t9141;
  double t9166;
  double t9757;
  double t9769;
  double t9770;
  double t9817;
  double t9820;
  double t9837;
  double t9845;
  double t9864;
  double t9886;
  double t9895;
  double t9903;
  double t9947;
  double t9950;
  double t9969;
  double t9976;
  double t10052;
  double t10055;
  double t5512;
  double t10030;
  double t10034;
  double t10038;
  double t10041;
  double t10043;
  double t10083;
  double t10087;
  double t10088;
  double t10101;
  double t10104;
  double t10108;
  double t10109;
  double t10126;
  double t10128;
  double t10130;
  double t10135;
  double t10136;
  double t10138;
  double t10140;
  double t10064;
  double t5518;
  double t5525;
  double t10151;
  double t10152;
  double t10154;
  double t10156;
  double t10157;
  double t10112;
  double t10165;
  double t10166;
  double t10168;
  double t10116;
  double t10142;
  double t10178;
  double t10179;
  double t10180;
  double t10146;
  t605 = Sin(var1[3]);
  t140 = Cos(var1[11]);
  t213 = -1.*t140;
  t298 = 1. + t213;
  t460 = Sin(var1[11]);
  t1252 = Cos(var1[3]);
  t1076 = Cos(var1[5]);
  t1094 = Sin(var1[4]);
  t1277 = Sin(var1[5]);
  t797 = Cos(var1[12]);
  t883 = -1.*t797;
  t900 = 1. + t883;
  t985 = Sin(var1[12]);
  t96 = Cos(var1[4]);
  t1609 = -1.*t1252*t1076;
  t1626 = -1.*t605*t1094*t1277;
  t1669 = t1609 + t1626;
  t1246 = -1.*t1076*t605*t1094;
  t1316 = t1252*t1277;
  t1317 = t1246 + t1316;
  t1882 = t96*t460*t605;
  t1959 = t140*t1669;
  t2014 = t1882 + t1959;
  t2085 = Cos(var1[13]);
  t2116 = -1.*t2085;
  t2131 = 1. + t2116;
  t2230 = Sin(var1[13]);
  t2427 = -1.*t140*t96*t605;
  t2478 = t460*t1669;
  t2509 = t2427 + t2478;
  t2851 = t797*t1317;
  t2941 = -1.*t985*t2014;
  t2966 = t2851 + t2941;
  t3089 = Cos(var1[14]);
  t3138 = -1.*t3089;
  t3150 = 1. + t3138;
  t3191 = Sin(var1[14]);
  t3487 = t2230*t2509;
  t3493 = t2085*t2966;
  t3498 = t3487 + t3493;
  t3566 = t2085*t2509;
  t3568 = -1.*t2230*t2966;
  t3569 = t3566 + t3568;
  t3659 = Cos(var1[15]);
  t3670 = -1.*t3659;
  t3682 = 1. + t3670;
  t3749 = Sin(var1[15]);
  t4120 = -1.*t3191*t3498;
  t4140 = t3089*t3569;
  t4144 = t4120 + t4140;
  t4235 = t3089*t3498;
  t4240 = t3191*t3569;
  t4256 = t4235 + t4240;
  t429 = -0.022225*t298;
  t511 = -0.086996*t460;
  t529 = 0. + t429 + t511;
  t966 = -0.31508*t900;
  t986 = 0.156996*t985;
  t1050 = 0. + t966 + t986;
  t1418 = -0.086996*t298;
  t1509 = 0.022225*t460;
  t1535 = 0. + t1418 + t1509;
  t1713 = -0.156996*t900;
  t1793 = -0.31508*t985;
  t1841 = 0. + t1713 + t1793;
  t4679 = -1.*t1076*t605;
  t4692 = t1252*t1094*t1277;
  t4773 = t4679 + t4692;
  t2139 = -0.022225*t2131;
  t2268 = 0.38008*t2230;
  t2403 = 0. + t2139 + t2268;
  t4580 = t1252*t1076*t1094;
  t4648 = t605*t1277;
  t4654 = t4580 + t4648;
  t4788 = -1.*t1252*t96*t460;
  t4915 = t140*t4773;
  t4929 = t4788 + t4915;
  t2819 = -0.38008*t2131;
  t2841 = -0.022225*t2230;
  t2842 = 0. + t2819 + t2841;
  t3174 = -0.86008*t3150;
  t3390 = -0.022225*t3191;
  t3440 = 0. + t3174 + t3390;
  t5009 = t140*t1252*t96;
  t5011 = t460*t4773;
  t5030 = t5009 + t5011;
  t5135 = t797*t4654;
  t5152 = -1.*t985*t4929;
  t5165 = t5135 + t5152;
  t3516 = -0.022225*t3150;
  t3539 = 0.86008*t3191;
  t3563 = 0. + t3516 + t3539;
  t3710 = -0.021147*t3682;
  t4040 = 1.34008*t3749;
  t4103 = 0. + t3710 + t4040;
  t5234 = t2230*t5030;
  t5266 = t2085*t5165;
  t5297 = t5234 + t5266;
  t5312 = t2085*t5030;
  t5319 = -1.*t2230*t5165;
  t5354 = t5312 + t5319;
  t4219 = -1.34008*t3682;
  t4223 = -0.021147*t3749;
  t4224 = 0. + t4219 + t4223;
  t5397 = -1.*t3191*t5297;
  t5423 = t3089*t5354;
  t5434 = t5397 + t5423;
  t5451 = t3089*t5297;
  t5452 = t3191*t5354;
  t5464 = t5451 + t5452;
  t5593 = t1252*t460*t1094;
  t5603 = t140*t1252*t96*t1277;
  t5643 = t5593 + t5603;
  t5717 = -1.*t140*t1252*t1094;
  t5721 = t1252*t96*t460*t1277;
  t5760 = t5717 + t5721;
  t5909 = t797*t1252*t96*t1076;
  t5928 = -1.*t985*t5643;
  t5963 = t5909 + t5928;
  t5978 = t2230*t5760;
  t5980 = t2085*t5963;
  t5986 = t5978 + t5980;
  t5998 = t2085*t5760;
  t6042 = -1.*t2230*t5963;
  t6073 = t5998 + t6042;
  t6118 = -1.*t3191*t5986;
  t6120 = t3089*t6073;
  t6129 = t6118 + t6120;
  t6168 = t3089*t5986;
  t6216 = t3191*t6073;
  t6218 = t6168 + t6216;
  t6470 = t460*t605*t1094;
  t6504 = t140*t96*t605*t1277;
  t6507 = t6470 + t6504;
  t6519 = -1.*t140*t605*t1094;
  t6529 = t96*t460*t605*t1277;
  t6559 = t6519 + t6529;
  t6623 = t797*t96*t1076*t605;
  t6637 = -1.*t985*t6507;
  t6647 = t6623 + t6637;
  t6700 = t2230*t6559;
  t6723 = t2085*t6647;
  t6724 = t6700 + t6723;
  t6736 = t2085*t6559;
  t6744 = -1.*t2230*t6647;
  t6755 = t6736 + t6744;
  t6757 = -1.*t3191*t6724;
  t6763 = t3089*t6755;
  t6766 = t6757 + t6763;
  t6782 = t3089*t6724;
  t6784 = t3191*t6755;
  t6790 = t6782 + t6784;
  t6914 = t96*t460;
  t6915 = -1.*t140*t1094*t1277;
  t6919 = t6914 + t6915;
  t6935 = -1.*t140*t96;
  t6941 = -1.*t460*t1094*t1277;
  t6947 = t6935 + t6941;
  t6993 = -1.*t797*t1076*t1094;
  t6996 = -1.*t985*t6919;
  t6999 = t6993 + t6996;
  t7005 = t2230*t6947;
  t7006 = t2085*t6999;
  t7010 = t7005 + t7006;
  t7015 = t2085*t6947;
  t7026 = -1.*t2230*t6999;
  t7035 = t7015 + t7026;
  t7064 = -1.*t3191*t7010;
  t7071 = t3089*t7035;
  t7078 = t7064 + t7071;
  t7087 = t3089*t7010;
  t7089 = t3191*t7035;
  t7097 = t7087 + t7089;
  t7245 = t1076*t605;
  t7251 = -1.*t1252*t1094*t1277;
  t7254 = t7245 + t7251;
  t7258 = -1.*t140*t985*t4654;
  t7263 = t797*t7254;
  t7265 = t7258 + t7263;
  t7281 = t460*t2230*t4654;
  t7282 = t2085*t7265;
  t7291 = t7281 + t7282;
  t7301 = t2085*t460*t4654;
  t7302 = -1.*t2230*t7265;
  t7318 = t7301 + t7302;
  t7328 = -1.*t3191*t7291;
  t7339 = t3089*t7318;
  t7348 = t7328 + t7339;
  t7355 = t3089*t7291;
  t7358 = t3191*t7318;
  t7365 = t7355 + t7358;
  t7444 = t1076*t605*t1094;
  t7467 = -1.*t1252*t1277;
  t7468 = t7444 + t7467;
  t7523 = -1.*t140*t985*t7468;
  t7527 = t797*t1669;
  t7530 = t7523 + t7527;
  t7557 = t460*t2230*t7468;
  t7560 = t2085*t7530;
  t7563 = t7557 + t7560;
  t7570 = t2085*t460*t7468;
  t7576 = -1.*t2230*t7530;
  t7577 = t7570 + t7576;
  t7591 = -1.*t3191*t7563;
  t7599 = t3089*t7577;
  t7608 = t7591 + t7599;
  t7630 = t3089*t7563;
  t7633 = t3191*t7577;
  t7635 = t7630 + t7633;
  t7716 = -1.*t140*t96*t1076*t985;
  t7722 = -1.*t797*t96*t1277;
  t7731 = t7716 + t7722;
  t7760 = t96*t1076*t460*t2230;
  t7761 = t2085*t7731;
  t7764 = t7760 + t7761;
  t7772 = t2085*t96*t1076*t460;
  t7778 = -1.*t2230*t7731;
  t7780 = t7772 + t7778;
  t7806 = -1.*t3191*t7764;
  t7821 = t3089*t7780;
  t7827 = t7806 + t7821;
  t7848 = t3089*t7764;
  t7854 = t3191*t7780;
  t7856 = t7848 + t7854;
  t7937 = -1.*t140*t1252*t96;
  t7950 = -1.*t460*t4773;
  t7954 = t7937 + t7950;
  t7966 = t2230*t4929;
  t7975 = -1.*t2085*t985*t7954;
  t7976 = t7966 + t7975;
  t7982 = t2085*t4929;
  t7985 = t985*t2230*t7954;
  t7988 = t7982 + t7985;
  t8004 = -1.*t3191*t7976;
  t8010 = t3089*t7988;
  t8011 = t8004 + t8010;
  t8033 = t3089*t7976;
  t8034 = t3191*t7988;
  t8035 = t8033 + t8034;
  t7884 = -0.086996*t140;
  t7889 = -0.022225*t460;
  t7897 = t7884 + t7889;
  t7915 = 0.022225*t140;
  t7919 = t7915 + t511;
  t8113 = t1252*t1076;
  t8117 = t605*t1094*t1277;
  t8122 = t8113 + t8117;
  t8136 = -1.*t460*t8122;
  t8152 = t2427 + t8136;
  t8128 = -1.*t96*t460*t605;
  t8129 = t140*t8122;
  t8130 = t8128 + t8129;
  t8161 = t2230*t8130;
  t8166 = -1.*t2085*t985*t8152;
  t8170 = t8161 + t8166;
  t8215 = t2085*t8130;
  t8223 = t985*t2230*t8152;
  t8239 = t8215 + t8223;
  t8263 = -1.*t3191*t8170;
  t8293 = t3089*t8239;
  t8306 = t8263 + t8293;
  t8313 = t3089*t8170;
  t8329 = t3191*t8239;
  t8333 = t8313 + t8329;
  t8497 = t140*t1094;
  t8498 = -1.*t96*t460*t1277;
  t8500 = t8497 + t8498;
  t8477 = t460*t1094;
  t8484 = t140*t96*t1277;
  t8485 = t8477 + t8484;
  t8519 = t2230*t8485;
  t8520 = -1.*t2085*t985*t8500;
  t8533 = t8519 + t8520;
  t8554 = t2085*t8485;
  t8562 = t985*t2230*t8500;
  t8563 = t8554 + t8562;
  t8573 = -1.*t3191*t8533;
  t8584 = t3089*t8563;
  t8615 = t8573 + t8584;
  t8620 = t3089*t8533;
  t8636 = t3191*t8563;
  t8642 = t8620 + t8636;
  t8724 = -1.*t985*t4654;
  t8725 = -1.*t797*t4929;
  t8726 = t8724 + t8725;
  t8751 = -1.*t3089*t2230*t8726;
  t8758 = -1.*t2085*t3191*t8726;
  t8766 = t8751 + t8758;
  t8776 = t2085*t3089*t8726;
  t8783 = -1.*t2230*t3191*t8726;
  t8787 = t8776 + t8783;
  t8699 = 0.156996*t797;
  t8703 = t8699 + t1793;
  t8706 = -0.31508*t797;
  t8709 = -0.156996*t985;
  t8715 = t8706 + t8709;
  t8879 = -1.*t985*t7468;
  t8884 = -1.*t797*t8130;
  t8895 = t8879 + t8884;
  t8922 = -1.*t3089*t2230*t8895;
  t8924 = -1.*t2085*t3191*t8895;
  t8929 = t8922 + t8924;
  t8956 = t2085*t3089*t8895;
  t8957 = -1.*t2230*t3191*t8895;
  t8960 = t8956 + t8957;
  t9055 = -1.*t96*t1076*t985;
  t9063 = -1.*t797*t8485;
  t9083 = t9055 + t9063;
  t9177 = -1.*t3089*t2230*t9083;
  t9178 = -1.*t2085*t3191*t9083;
  t9193 = t9177 + t9178;
  t9201 = t2085*t3089*t9083;
  t9210 = -1.*t2230*t3191*t9083;
  t9215 = t9201 + t9210;
  t9354 = -1.*t2230*t5030;
  t9356 = -1.*t2085*t5165;
  t9361 = t9354 + t9356;
  t9390 = t3191*t9361;
  t9391 = t9390 + t5423;
  t9402 = t3089*t9361;
  t9426 = -1.*t3191*t5354;
  t9429 = t9402 + t9426;
  t9282 = 0.38008*t2085;
  t9307 = t9282 + t2841;
  t9318 = -0.022225*t2085;
  t9341 = -0.38008*t2230;
  t9343 = t9318 + t9341;
  t8904 = t797*t7468;
  t8905 = -1.*t985*t8130;
  t8907 = t8904 + t8905;
  t9456 = t140*t96*t605;
  t9461 = t460*t8122;
  t9464 = t9456 + t9461;
  t9500 = -1.*t2230*t9464;
  t9510 = -1.*t2085*t8907;
  t9518 = t9500 + t9510;
  t9525 = t2085*t9464;
  t9539 = -1.*t2230*t8907;
  t9576 = t9525 + t9539;
  t9597 = t3191*t9518;
  t9599 = t3089*t9576;
  t9610 = t9597 + t9599;
  t9633 = t3089*t9518;
  t9637 = -1.*t3191*t9576;
  t9638 = t9633 + t9637;
  t9120 = t797*t96*t1076;
  t9141 = -1.*t985*t8485;
  t9166 = t9120 + t9141;
  t9757 = -1.*t140*t1094;
  t9769 = t96*t460*t1277;
  t9770 = t9757 + t9769;
  t9817 = -1.*t2230*t9770;
  t9820 = -1.*t2085*t9166;
  t9837 = t9817 + t9820;
  t9845 = t2085*t9770;
  t9864 = -1.*t2230*t9166;
  t9886 = t9845 + t9864;
  t9895 = t3191*t9837;
  t9903 = t3089*t9886;
  t9947 = t9895 + t9903;
  t9950 = t3089*t9837;
  t9969 = -1.*t3191*t9886;
  t9976 = t9950 + t9969;
  t10052 = -1.*t3089*t5297;
  t10055 = t10052 + t9426;
  t5512 = t3659*t5434;
  t10030 = -0.022225*t3089;
  t10034 = -0.86008*t3191;
  t10038 = t10030 + t10034;
  t10041 = 0.86008*t3089;
  t10043 = t10041 + t3390;
  t10083 = t2230*t9464;
  t10087 = t2085*t8907;
  t10088 = t10083 + t10087;
  t10101 = -1.*t3191*t10088;
  t10104 = t10101 + t9599;
  t10108 = -1.*t3089*t10088;
  t10109 = t10108 + t9637;
  t10126 = t2230*t9770;
  t10128 = t2085*t9166;
  t10130 = t10126 + t10128;
  t10135 = -1.*t3191*t10130;
  t10136 = t10135 + t9903;
  t10138 = -1.*t3089*t10130;
  t10140 = t10138 + t9969;
  t10064 = -1.*t3749*t5434;
  t5518 = -1.*t3749*t5464;
  t5525 = t5512 + t5518;
  t10151 = 1.34008*t3659;
  t10152 = t10151 + t4223;
  t10154 = -0.021147*t3659;
  t10156 = -1.34008*t3749;
  t10157 = t10154 + t10156;
  t10112 = -1.*t3749*t10104;
  t10165 = t3089*t10088;
  t10166 = t3191*t9576;
  t10168 = t10165 + t10166;
  t10116 = t3659*t10104;
  t10142 = -1.*t3749*t10136;
  t10178 = t3089*t10130;
  t10179 = t3191*t9886;
  t10180 = t10178 + t10179;
  t10146 = t3659*t10136;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1050*t1317 + t1535*t1669 + t1841*t2014 + t2403*t2509 + t2842*t2966 + t3440*t3498 + t3563*t3569 + t4103*t4144 + t4224*t4256 - 1.250132*(t3749*t4144 + t3659*t4256) + 0.043925*(t3659*t4144 - 1.*t3749*t4256) - 1.*t529*t605*t96 - 0.166996*(t2014*t797 + t1317*t985);
  p_output1(10)=t1050*t4654 + t1535*t4773 + t1841*t4929 + t2403*t5030 + t2842*t5165 + t3440*t5297 + t3563*t5354 + t4103*t5434 + t4224*t5464 - 1.250132*(t3749*t5434 + t3659*t5464) + 0.043925*t5525 + t1252*t529*t96 - 0.166996*(t4929*t797 + t4654*t985);
  p_output1(11)=0;
  p_output1(12)=-1.*t1094*t1252*t529 + t1841*t5643 + t2403*t5760 + t2842*t5963 + t3440*t5986 + t3563*t6073 + t4103*t6129 + t4224*t6218 - 1.250132*(t3749*t6129 + t3659*t6218) + 0.043925*(t3659*t6129 - 1.*t3749*t6218) + t1050*t1076*t1252*t96 + t1252*t1277*t1535*t96 - 0.166996*(t5643*t797 + t1076*t1252*t96*t985);
  p_output1(13)=-1.*t1094*t529*t605 + t1841*t6507 + t2403*t6559 + t2842*t6647 + t3440*t6724 + t3563*t6755 + t4103*t6766 + t4224*t6790 - 1.250132*(t3749*t6766 + t3659*t6790) + 0.043925*(t3659*t6766 - 1.*t3749*t6790) + t1050*t1076*t605*t96 + t1277*t1535*t605*t96 - 0.166996*(t6507*t797 + t1076*t605*t96*t985);
  p_output1(14)=-1.*t1050*t1076*t1094 - 1.*t1094*t1277*t1535 + t1841*t6919 + t2403*t6947 + t2842*t6999 + t3440*t7010 + t3563*t7035 + t4103*t7078 + t4224*t7097 - 1.250132*(t3749*t7078 + t3659*t7097) + 0.043925*(t3659*t7078 - 1.*t3749*t7097) - 1.*t529*t96 - 0.166996*(t6919*t797 - 1.*t1076*t1094*t985);
  p_output1(15)=t1535*t4654 + t140*t1841*t4654 + t2403*t460*t4654 + t1050*t7254 + t2842*t7265 + t3440*t7291 + t3563*t7318 + t4103*t7348 + t4224*t7365 - 1.250132*(t3749*t7348 + t3659*t7365) + 0.043925*(t3659*t7348 - 1.*t3749*t7365) - 0.166996*(t140*t4654*t797 + t7254*t985);
  p_output1(16)=t1050*t1669 + t1535*t7468 + t140*t1841*t7468 + t2403*t460*t7468 + t2842*t7530 + t3440*t7563 + t3563*t7577 + t4103*t7608 + t4224*t7635 - 1.250132*(t3749*t7608 + t3659*t7635) + 0.043925*(t3659*t7608 - 1.*t3749*t7635) - 0.166996*(t140*t7468*t797 + t1669*t985);
  p_output1(17)=t2842*t7731 + t3440*t7764 + t3563*t7780 + t4103*t7827 + t4224*t7856 - 1.250132*(t3749*t7827 + t3659*t7856) + 0.043925*(t3659*t7827 - 1.*t3749*t7856) - 1.*t1050*t1277*t96 + t1076*t1535*t96 + t1076*t140*t1841*t96 + t1076*t2403*t460*t96 - 0.166996*(t1076*t140*t797*t96 - 1.*t1277*t96*t985);
  p_output1(18)=0;
  p_output1(19)=0;
  p_output1(20)=0;
  p_output1(21)=0;
  p_output1(22)=0;
  p_output1(23)=0;
  p_output1(24)=0;
  p_output1(25)=0;
  p_output1(26)=0;
  p_output1(27)=0;
  p_output1(28)=0;
  p_output1(29)=0;
  p_output1(30)=0;
  p_output1(31)=0;
  p_output1(32)=0;
  p_output1(33)=t2403*t4929 + t4773*t7919 + t1841*t7954 - 0.166996*t7954*t797 + t3440*t7976 + t3563*t7988 + t4103*t8011 + t4224*t8035 - 1.250132*(t3749*t8011 + t3659*t8035) + 0.043925*(t3659*t8011 - 1.*t3749*t8035) + t1252*t7897*t96 - 1.*t2842*t7954*t985;
  p_output1(34)=t7919*t8122 + t2403*t8130 + t1841*t8152 - 0.166996*t797*t8152 + t3440*t8170 + t3563*t8239 + t4103*t8306 + t4224*t8333 - 1.250132*(t3749*t8306 + t3659*t8333) + 0.043925*(t3659*t8306 - 1.*t3749*t8333) + t605*t7897*t96 - 1.*t2842*t8152*t985;
  p_output1(35)=-1.*t1094*t7897 + t2403*t8485 + t1841*t8500 - 0.166996*t797*t8500 + t3440*t8533 + t3563*t8563 + t4103*t8615 + t4224*t8642 - 1.250132*(t3749*t8615 + t3659*t8642) + 0.043925*(t3659*t8615 - 1.*t3749*t8642) + t1277*t7919*t96 - 1.*t2842*t8500*t985;
  p_output1(36)=-0.166996*t5165 + t4654*t8703 + t4929*t8715 + t2842*t8726 + t2085*t3440*t8726 - 1.*t2230*t3563*t8726 + t4103*t8766 + t4224*t8787 - 1.250132*(t3749*t8766 + t3659*t8787) + 0.043925*(t3659*t8766 - 1.*t3749*t8787);
  p_output1(37)=t7468*t8703 + t8130*t8715 + t2842*t8895 + t2085*t3440*t8895 - 1.*t2230*t3563*t8895 - 0.166996*t8907 + t4103*t8929 + t4224*t8960 - 1.250132*(t3749*t8929 + t3659*t8960) + 0.043925*(t3659*t8929 - 1.*t3749*t8960);
  p_output1(38)=t8485*t8715 + t2842*t9083 + t2085*t3440*t9083 - 1.*t2230*t3563*t9083 - 0.166996*t9166 + t4103*t9193 + t4224*t9215 - 1.250132*(t3749*t9193 + t3659*t9215) + 0.043925*(t3659*t9193 - 1.*t3749*t9215) + t1076*t8703*t96;
  p_output1(39)=t3440*t5354 + t5030*t9307 + t5165*t9343 + t3563*t9361 + t4224*t9391 + t4103*t9429 + 0.043925*(-1.*t3749*t9391 + t3659*t9429) - 1.250132*(t3659*t9391 + t3749*t9429);
  p_output1(40)=t8907*t9343 + t9307*t9464 + t3563*t9518 + t3440*t9576 + t4224*t9610 + t4103*t9638 + 0.043925*(-1.*t3749*t9610 + t3659*t9638) - 1.250132*(t3659*t9610 + t3749*t9638);
  p_output1(41)=t9166*t9343 + t9307*t9770 + t3563*t9837 + t3440*t9886 + t4224*t9947 + t4103*t9976 + 0.043925*(-1.*t3749*t9947 + t3659*t9976) - 1.250132*(t3659*t9947 + t3749*t9976);
  p_output1(42)=0.043925*(t10064 + t10055*t3659) + t10055*t4103 + t10038*t5297 + t10043*t5354 + t4224*t5434 - 1.250132*(t10055*t3749 + t5512);
  p_output1(43)=t10038*t10088 + 0.043925*(t10112 + t10109*t3659) - 1.250132*(t10116 + t10109*t3749) + t10109*t4103 + t10104*t4224 + t10043*t9576;
  p_output1(44)=t10038*t10130 + 0.043925*(t10142 + t10140*t3659) - 1.250132*(t10146 + t10140*t3749) + t10140*t4103 + t10136*t4224 + t10043*t9886;
  p_output1(45)=t10152*t5434 + t10157*t5464 + 0.043925*(t10064 - 1.*t3659*t5464) - 1.250132*t5525;
  p_output1(46)=t10104*t10152 + t10157*t10168 + 0.043925*(t10112 - 1.*t10168*t3659) - 1.250132*(t10116 - 1.*t10168*t3749);
  p_output1(47)=t10136*t10152 + t10157*t10180 + 0.043925*(t10142 - 1.*t10180*t3659) - 1.250132*(t10146 - 1.*t10180*t3749);
}


       
void Jp_RightFootFront(Eigen::Matrix<double,3,16> &p_output1, const Eigen::Matrix<double,16,1> &var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
