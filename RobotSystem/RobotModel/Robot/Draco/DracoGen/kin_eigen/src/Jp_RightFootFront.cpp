/*
 * Automatically Generated from Mathematica.
 * Thu 16 Aug 2018 18:05:10 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_RightFootFront.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,16> &p_output1, const Eigen::Matrix<double,16,1> &var1)
{
  double t317;
  double t79;
  double t83;
  double t112;
  double t226;
  double t910;
  double t626;
  double t728;
  double t931;
  double t442;
  double t478;
  double t491;
  double t562;
  double t35;
  double t1144;
  double t1166;
  double t1215;
  double t895;
  double t939;
  double t1039;
  double t1482;
  double t1491;
  double t1525;
  double t1615;
  double t1629;
  double t1632;
  double t1658;
  double t1794;
  double t1813;
  double t1854;
  double t2359;
  double t2363;
  double t2408;
  double t2554;
  double t2594;
  double t2619;
  double t2638;
  double t2789;
  double t2792;
  double t2883;
  double t2992;
  double t3012;
  double t3020;
  double t3028;
  double t3040;
  double t3041;
  double t3095;
  double t3136;
  double t3137;
  double t3149;
  double t3171;
  double t3174;
  double t3187;
  double t189;
  double t256;
  double t276;
  double t534;
  double t565;
  double t595;
  double t1135;
  double t1136;
  double t1140;
  double t1324;
  double t1407;
  double t1429;
  double t3283;
  double t3285;
  double t3286;
  double t1650;
  double t1686;
  double t1776;
  double t3260;
  double t3265;
  double t3276;
  double t3296;
  double t3306;
  double t3323;
  double t2247;
  double t2250;
  double t2347;
  double t2627;
  double t2648;
  double t2772;
  double t3326;
  double t3328;
  double t3339;
  double t3353;
  double t3363;
  double t3364;
  double t2929;
  double t2973;
  double t2991;
  double t3055;
  double t3096;
  double t3127;
  double t3372;
  double t3377;
  double t3411;
  double t3439;
  double t3466;
  double t3469;
  double t3153;
  double t3157;
  double t3159;
  double t3564;
  double t3631;
  double t3641;
  double t3649;
  double t3650;
  double t3656;
  double t4047;
  double t4056;
  double t4067;
  double t4094;
  double t4106;
  double t4109;
  double t4231;
  double t4259;
  double t4277;
  double t4295;
  double t4301;
  double t4311;
  double t4348;
  double t4359;
  double t4395;
  double t4427;
  double t4449;
  double t4468;
  double t4572;
  double t4576;
  double t4578;
  double t4774;
  double t4786;
  double t4795;
  double t4854;
  double t4915;
  double t4979;
  double t5123;
  double t5145;
  double t5152;
  double t5205;
  double t5207;
  double t5217;
  double t5235;
  double t5321;
  double t5354;
  double t5379;
  double t5387;
  double t5406;
  double t5418;
  double t5429;
  double t5432;
  double t5604;
  double t5611;
  double t5628;
  double t5650;
  double t5659;
  double t5666;
  double t5681;
  double t5692;
  double t5695;
  double t5707;
  double t5710;
  double t5717;
  double t5733;
  double t5735;
  double t5736;
  double t5755;
  double t5764;
  double t5766;
  double t5806;
  double t5809;
  double t5820;
  double t5973;
  double t5975;
  double t6000;
  double t6021;
  double t6029;
  double t6038;
  double t6135;
  double t6140;
  double t6168;
  double t6173;
  double t6195;
  double t6196;
  double t6261;
  double t6273;
  double t6289;
  double t6303;
  double t6307;
  double t6322;
  double t6425;
  double t6426;
  double t6436;
  double t6550;
  double t6555;
  double t6558;
  double t6613;
  double t6621;
  double t6635;
  double t6645;
  double t6660;
  double t6673;
  double t6683;
  double t6694;
  double t6703;
  double t6717;
  double t6727;
  double t6736;
  double t6821;
  double t6824;
  double t6829;
  double t6892;
  double t6899;
  double t6907;
  double t6915;
  double t6919;
  double t6921;
  double t6937;
  double t6938;
  double t6940;
  double t6959;
  double t6963;
  double t6986;
  double t7186;
  double t7199;
  double t7201;
  double t7270;
  double t7280;
  double t7281;
  double t7298;
  double t7305;
  double t7316;
  double t7321;
  double t7324;
  double t7334;
  double t7340;
  double t7349;
  double t7352;
  double t7082;
  double t7113;
  double t7116;
  double t7137;
  double t7149;
  double t7494;
  double t7497;
  double t7515;
  double t7558;
  double t7567;
  double t7530;
  double t7538;
  double t7543;
  double t7592;
  double t7598;
  double t7609;
  double t7611;
  double t7617;
  double t7622;
  double t7641;
  double t7657;
  double t7679;
  double t7703;
  double t7710;
  double t7719;
  double t7827;
  double t7831;
  double t7842;
  double t7792;
  double t7803;
  double t7805;
  double t7865;
  double t7869;
  double t7871;
  double t7889;
  double t7912;
  double t7915;
  double t7918;
  double t7925;
  double t7943;
  double t7955;
  double t7958;
  double t7960;
  double t8067;
  double t8073;
  double t8080;
  double t8113;
  double t8128;
  double t8137;
  double t8145;
  double t8160;
  double t8162;
  double t8024;
  double t8026;
  double t8045;
  double t8061;
  double t8065;
  double t8222;
  double t8237;
  double t8239;
  double t8282;
  double t8289;
  double t8304;
  double t8306;
  double t8316;
  double t8325;
  double t8422;
  double t8425;
  double t8428;
  double t8471;
  double t8472;
  double t8473;
  double t8477;
  double t8482;
  double t8484;
  double t8592;
  double t8597;
  double t8608;
  double t8623;
  double t8627;
  double t8641;
  double t8656;
  double t8657;
  double t8570;
  double t8573;
  double t8576;
  double t8579;
  double t8581;
  double t8265;
  double t8266;
  double t8267;
  double t8732;
  double t8742;
  double t8746;
  double t8782;
  double t8810;
  double t8813;
  double t8821;
  double t8822;
  double t8824;
  double t8826;
  double t8828;
  double t8833;
  double t8842;
  double t8850;
  double t8856;
  double t8450;
  double t8452;
  double t8454;
  double t9020;
  double t9021;
  double t9022;
  double t9029;
  double t9034;
  double t9036;
  double t9038;
  double t9042;
  double t9043;
  double t9071;
  double t9073;
  double t9084;
  double t9126;
  double t9134;
  double t9173;
  double t9246;
  double t9260;
  double t3775;
  double t9208;
  double t9209;
  double t9213;
  double t9231;
  double t9233;
  double t9351;
  double t9359;
  double t9360;
  double t9382;
  double t9385;
  double t9388;
  double t9396;
  double t9484;
  double t9495;
  double t9501;
  double t9516;
  double t9517;
  double t9529;
  double t9530;
  double t9284;
  double t3816;
  double t3875;
  double t9585;
  double t9596;
  double t9644;
  double t9645;
  double t9652;
  double t9406;
  double t9752;
  double t9758;
  double t9783;
  double t9447;
  double t9539;
  double t9854;
  double t9869;
  double t9873;
  double t9547;
  t317 = Sin(var1[3]);
  t79 = Cos(var1[11]);
  t83 = -1.*t79;
  t112 = 1. + t83;
  t226 = Sin(var1[11]);
  t910 = Cos(var1[3]);
  t626 = Cos(var1[5]);
  t728 = Sin(var1[4]);
  t931 = Sin(var1[5]);
  t442 = Cos(var1[12]);
  t478 = -1.*t442;
  t491 = 1. + t478;
  t562 = Sin(var1[12]);
  t35 = Cos(var1[4]);
  t1144 = -1.*t910*t626;
  t1166 = -1.*t317*t728*t931;
  t1215 = t1144 + t1166;
  t895 = -1.*t626*t317*t728;
  t939 = t910*t931;
  t1039 = t895 + t939;
  t1482 = t35*t226*t317;
  t1491 = t79*t1215;
  t1525 = t1482 + t1491;
  t1615 = Cos(var1[13]);
  t1629 = -1.*t1615;
  t1632 = 1. + t1629;
  t1658 = Sin(var1[13]);
  t1794 = -1.*t79*t35*t317;
  t1813 = t226*t1215;
  t1854 = t1794 + t1813;
  t2359 = t442*t1039;
  t2363 = -1.*t562*t1525;
  t2408 = t2359 + t2363;
  t2554 = Cos(var1[14]);
  t2594 = -1.*t2554;
  t2619 = 1. + t2594;
  t2638 = Sin(var1[14]);
  t2789 = t1658*t1854;
  t2792 = t1615*t2408;
  t2883 = t2789 + t2792;
  t2992 = t1615*t1854;
  t3012 = -1.*t1658*t2408;
  t3020 = t2992 + t3012;
  t3028 = Cos(var1[15]);
  t3040 = -1.*t3028;
  t3041 = 1. + t3040;
  t3095 = Sin(var1[15]);
  t3136 = -1.*t2638*t2883;
  t3137 = t2554*t3020;
  t3149 = t3136 + t3137;
  t3171 = t2554*t2883;
  t3174 = t2638*t3020;
  t3187 = t3171 + t3174;
  t189 = -0.022225*t112;
  t256 = -0.086996*t226;
  t276 = 0. + t189 + t256;
  t534 = -0.31508*t491;
  t565 = 0.156996*t562;
  t595 = 0. + t534 + t565;
  t1135 = -0.086996*t112;
  t1136 = 0.022225*t226;
  t1140 = 0. + t1135 + t1136;
  t1324 = -0.156996*t491;
  t1407 = -0.31508*t562;
  t1429 = 0. + t1324 + t1407;
  t3283 = -1.*t626*t317;
  t3285 = t910*t728*t931;
  t3286 = t3283 + t3285;
  t1650 = -0.022225*t1632;
  t1686 = 0.38008*t1658;
  t1776 = 0. + t1650 + t1686;
  t3260 = t910*t626*t728;
  t3265 = t317*t931;
  t3276 = t3260 + t3265;
  t3296 = -1.*t910*t35*t226;
  t3306 = t79*t3286;
  t3323 = t3296 + t3306;
  t2247 = -0.38008*t1632;
  t2250 = -0.022225*t1658;
  t2347 = 0. + t2247 + t2250;
  t2627 = -0.86008*t2619;
  t2648 = -0.022225*t2638;
  t2772 = 0. + t2627 + t2648;
  t3326 = t79*t910*t35;
  t3328 = t226*t3286;
  t3339 = t3326 + t3328;
  t3353 = t442*t3276;
  t3363 = -1.*t562*t3323;
  t3364 = t3353 + t3363;
  t2929 = -0.022225*t2619;
  t2973 = 0.86008*t2638;
  t2991 = 0. + t2929 + t2973;
  t3055 = -0.021147*t3041;
  t3096 = 1.34008*t3095;
  t3127 = 0. + t3055 + t3096;
  t3372 = t1658*t3339;
  t3377 = t1615*t3364;
  t3411 = t3372 + t3377;
  t3439 = t1615*t3339;
  t3466 = -1.*t1658*t3364;
  t3469 = t3439 + t3466;
  t3153 = -1.34008*t3041;
  t3157 = -0.021147*t3095;
  t3159 = 0. + t3153 + t3157;
  t3564 = -1.*t2638*t3411;
  t3631 = t2554*t3469;
  t3641 = t3564 + t3631;
  t3649 = t2554*t3411;
  t3650 = t2638*t3469;
  t3656 = t3649 + t3650;
  t4047 = t910*t226*t728;
  t4056 = t79*t910*t35*t931;
  t4067 = t4047 + t4056;
  t4094 = -1.*t79*t910*t728;
  t4106 = t910*t35*t226*t931;
  t4109 = t4094 + t4106;
  t4231 = t442*t910*t35*t626;
  t4259 = -1.*t562*t4067;
  t4277 = t4231 + t4259;
  t4295 = t1658*t4109;
  t4301 = t1615*t4277;
  t4311 = t4295 + t4301;
  t4348 = t1615*t4109;
  t4359 = -1.*t1658*t4277;
  t4395 = t4348 + t4359;
  t4427 = -1.*t2638*t4311;
  t4449 = t2554*t4395;
  t4468 = t4427 + t4449;
  t4572 = t2554*t4311;
  t4576 = t2638*t4395;
  t4578 = t4572 + t4576;
  t4774 = t226*t317*t728;
  t4786 = t79*t35*t317*t931;
  t4795 = t4774 + t4786;
  t4854 = -1.*t79*t317*t728;
  t4915 = t35*t226*t317*t931;
  t4979 = t4854 + t4915;
  t5123 = t442*t35*t626*t317;
  t5145 = -1.*t562*t4795;
  t5152 = t5123 + t5145;
  t5205 = t1658*t4979;
  t5207 = t1615*t5152;
  t5217 = t5205 + t5207;
  t5235 = t1615*t4979;
  t5321 = -1.*t1658*t5152;
  t5354 = t5235 + t5321;
  t5379 = -1.*t2638*t5217;
  t5387 = t2554*t5354;
  t5406 = t5379 + t5387;
  t5418 = t2554*t5217;
  t5429 = t2638*t5354;
  t5432 = t5418 + t5429;
  t5604 = t35*t226;
  t5611 = -1.*t79*t728*t931;
  t5628 = t5604 + t5611;
  t5650 = -1.*t79*t35;
  t5659 = -1.*t226*t728*t931;
  t5666 = t5650 + t5659;
  t5681 = -1.*t442*t626*t728;
  t5692 = -1.*t562*t5628;
  t5695 = t5681 + t5692;
  t5707 = t1658*t5666;
  t5710 = t1615*t5695;
  t5717 = t5707 + t5710;
  t5733 = t1615*t5666;
  t5735 = -1.*t1658*t5695;
  t5736 = t5733 + t5735;
  t5755 = -1.*t2638*t5717;
  t5764 = t2554*t5736;
  t5766 = t5755 + t5764;
  t5806 = t2554*t5717;
  t5809 = t2638*t5736;
  t5820 = t5806 + t5809;
  t5973 = t626*t317;
  t5975 = -1.*t910*t728*t931;
  t6000 = t5973 + t5975;
  t6021 = -1.*t79*t562*t3276;
  t6029 = t442*t6000;
  t6038 = t6021 + t6029;
  t6135 = t226*t1658*t3276;
  t6140 = t1615*t6038;
  t6168 = t6135 + t6140;
  t6173 = t1615*t226*t3276;
  t6195 = -1.*t1658*t6038;
  t6196 = t6173 + t6195;
  t6261 = -1.*t2638*t6168;
  t6273 = t2554*t6196;
  t6289 = t6261 + t6273;
  t6303 = t2554*t6168;
  t6307 = t2638*t6196;
  t6322 = t6303 + t6307;
  t6425 = t626*t317*t728;
  t6426 = -1.*t910*t931;
  t6436 = t6425 + t6426;
  t6550 = -1.*t79*t562*t6436;
  t6555 = t442*t1215;
  t6558 = t6550 + t6555;
  t6613 = t226*t1658*t6436;
  t6621 = t1615*t6558;
  t6635 = t6613 + t6621;
  t6645 = t1615*t226*t6436;
  t6660 = -1.*t1658*t6558;
  t6673 = t6645 + t6660;
  t6683 = -1.*t2638*t6635;
  t6694 = t2554*t6673;
  t6703 = t6683 + t6694;
  t6717 = t2554*t6635;
  t6727 = t2638*t6673;
  t6736 = t6717 + t6727;
  t6821 = -1.*t79*t35*t626*t562;
  t6824 = -1.*t442*t35*t931;
  t6829 = t6821 + t6824;
  t6892 = t35*t626*t226*t1658;
  t6899 = t1615*t6829;
  t6907 = t6892 + t6899;
  t6915 = t1615*t35*t626*t226;
  t6919 = -1.*t1658*t6829;
  t6921 = t6915 + t6919;
  t6937 = -1.*t2638*t6907;
  t6938 = t2554*t6921;
  t6940 = t6937 + t6938;
  t6959 = t2554*t6907;
  t6963 = t2638*t6921;
  t6986 = t6959 + t6963;
  t7186 = -1.*t79*t910*t35;
  t7199 = -1.*t226*t3286;
  t7201 = t7186 + t7199;
  t7270 = t1658*t3323;
  t7280 = -1.*t1615*t562*t7201;
  t7281 = t7270 + t7280;
  t7298 = t1615*t3323;
  t7305 = t562*t1658*t7201;
  t7316 = t7298 + t7305;
  t7321 = -1.*t2638*t7281;
  t7324 = t2554*t7316;
  t7334 = t7321 + t7324;
  t7340 = t2554*t7281;
  t7349 = t2638*t7316;
  t7352 = t7340 + t7349;
  t7082 = -0.086996*t79;
  t7113 = -0.022225*t226;
  t7116 = t7082 + t7113;
  t7137 = 0.022225*t79;
  t7149 = t7137 + t256;
  t7494 = t910*t626;
  t7497 = t317*t728*t931;
  t7515 = t7494 + t7497;
  t7558 = -1.*t226*t7515;
  t7567 = t1794 + t7558;
  t7530 = -1.*t35*t226*t317;
  t7538 = t79*t7515;
  t7543 = t7530 + t7538;
  t7592 = t1658*t7543;
  t7598 = -1.*t1615*t562*t7567;
  t7609 = t7592 + t7598;
  t7611 = t1615*t7543;
  t7617 = t562*t1658*t7567;
  t7622 = t7611 + t7617;
  t7641 = -1.*t2638*t7609;
  t7657 = t2554*t7622;
  t7679 = t7641 + t7657;
  t7703 = t2554*t7609;
  t7710 = t2638*t7622;
  t7719 = t7703 + t7710;
  t7827 = t79*t728;
  t7831 = -1.*t35*t226*t931;
  t7842 = t7827 + t7831;
  t7792 = t226*t728;
  t7803 = t79*t35*t931;
  t7805 = t7792 + t7803;
  t7865 = t1658*t7805;
  t7869 = -1.*t1615*t562*t7842;
  t7871 = t7865 + t7869;
  t7889 = t1615*t7805;
  t7912 = t562*t1658*t7842;
  t7915 = t7889 + t7912;
  t7918 = -1.*t2638*t7871;
  t7925 = t2554*t7915;
  t7943 = t7918 + t7925;
  t7955 = t2554*t7871;
  t7958 = t2638*t7915;
  t7960 = t7955 + t7958;
  t8067 = -1.*t562*t3276;
  t8073 = -1.*t442*t3323;
  t8080 = t8067 + t8073;
  t8113 = -1.*t2554*t1658*t8080;
  t8128 = -1.*t1615*t2638*t8080;
  t8137 = t8113 + t8128;
  t8145 = t1615*t2554*t8080;
  t8160 = -1.*t1658*t2638*t8080;
  t8162 = t8145 + t8160;
  t8024 = 0.156996*t442;
  t8026 = t8024 + t1407;
  t8045 = -0.31508*t442;
  t8061 = -0.156996*t562;
  t8065 = t8045 + t8061;
  t8222 = -1.*t562*t6436;
  t8237 = -1.*t442*t7543;
  t8239 = t8222 + t8237;
  t8282 = -1.*t2554*t1658*t8239;
  t8289 = -1.*t1615*t2638*t8239;
  t8304 = t8282 + t8289;
  t8306 = t1615*t2554*t8239;
  t8316 = -1.*t1658*t2638*t8239;
  t8325 = t8306 + t8316;
  t8422 = -1.*t35*t626*t562;
  t8425 = -1.*t442*t7805;
  t8428 = t8422 + t8425;
  t8471 = -1.*t2554*t1658*t8428;
  t8472 = -1.*t1615*t2638*t8428;
  t8473 = t8471 + t8472;
  t8477 = t1615*t2554*t8428;
  t8482 = -1.*t1658*t2638*t8428;
  t8484 = t8477 + t8482;
  t8592 = -1.*t1658*t3339;
  t8597 = -1.*t1615*t3364;
  t8608 = t8592 + t8597;
  t8623 = t2638*t8608;
  t8627 = t8623 + t3631;
  t8641 = t2554*t8608;
  t8656 = -1.*t2638*t3469;
  t8657 = t8641 + t8656;
  t8570 = 0.38008*t1615;
  t8573 = t8570 + t2250;
  t8576 = -0.022225*t1615;
  t8579 = -0.38008*t1658;
  t8581 = t8576 + t8579;
  t8265 = t442*t6436;
  t8266 = -1.*t562*t7543;
  t8267 = t8265 + t8266;
  t8732 = t79*t35*t317;
  t8742 = t226*t7515;
  t8746 = t8732 + t8742;
  t8782 = -1.*t1658*t8746;
  t8810 = -1.*t1615*t8267;
  t8813 = t8782 + t8810;
  t8821 = t1615*t8746;
  t8822 = -1.*t1658*t8267;
  t8824 = t8821 + t8822;
  t8826 = t2638*t8813;
  t8828 = t2554*t8824;
  t8833 = t8826 + t8828;
  t8842 = t2554*t8813;
  t8850 = -1.*t2638*t8824;
  t8856 = t8842 + t8850;
  t8450 = t442*t35*t626;
  t8452 = -1.*t562*t7805;
  t8454 = t8450 + t8452;
  t9020 = -1.*t79*t728;
  t9021 = t35*t226*t931;
  t9022 = t9020 + t9021;
  t9029 = -1.*t1658*t9022;
  t9034 = -1.*t1615*t8454;
  t9036 = t9029 + t9034;
  t9038 = t1615*t9022;
  t9042 = -1.*t1658*t8454;
  t9043 = t9038 + t9042;
  t9071 = t2638*t9036;
  t9073 = t2554*t9043;
  t9084 = t9071 + t9073;
  t9126 = t2554*t9036;
  t9134 = -1.*t2638*t9043;
  t9173 = t9126 + t9134;
  t9246 = -1.*t2554*t3411;
  t9260 = t9246 + t8656;
  t3775 = t3028*t3641;
  t9208 = -0.022225*t2554;
  t9209 = -0.86008*t2638;
  t9213 = t9208 + t9209;
  t9231 = 0.86008*t2554;
  t9233 = t9231 + t2648;
  t9351 = t1658*t8746;
  t9359 = t1615*t8267;
  t9360 = t9351 + t9359;
  t9382 = -1.*t2638*t9360;
  t9385 = t9382 + t8828;
  t9388 = -1.*t2554*t9360;
  t9396 = t9388 + t8850;
  t9484 = t1658*t9022;
  t9495 = t1615*t8454;
  t9501 = t9484 + t9495;
  t9516 = -1.*t2638*t9501;
  t9517 = t9516 + t9073;
  t9529 = -1.*t2554*t9501;
  t9530 = t9529 + t9134;
  t9284 = -1.*t3095*t3641;
  t3816 = -1.*t3095*t3656;
  t3875 = t3775 + t3816;
  t9585 = 1.34008*t3028;
  t9596 = t9585 + t3157;
  t9644 = -0.021147*t3028;
  t9645 = -1.34008*t3095;
  t9652 = t9644 + t9645;
  t9406 = -1.*t3095*t9385;
  t9752 = t2554*t9360;
  t9758 = t2638*t8824;
  t9783 = t9752 + t9758;
  t9447 = t3028*t9385;
  t9539 = -1.*t3095*t9517;
  t9854 = t2554*t9501;
  t9869 = t2638*t9043;
  t9873 = t9854 + t9869;
  t9547 = t3028*t9517;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1140*t1215 + t1429*t1525 + t1776*t1854 + t2347*t2408 + t2772*t2883 + t2991*t3020 + t3127*t3149 + t3159*t3187 - 1.250132*(t3095*t3149 + t3028*t3187) + 0.043925*(t3028*t3149 - 1.*t3095*t3187) - 1.*t276*t317*t35 - 0.166996*(t1525*t442 + t1039*t562) + t1039*t595;
  p_output1(10)=t1140*t3286 + t1429*t3323 + t1776*t3339 + t2347*t3364 + t2772*t3411 + t2991*t3469 + t3127*t3641 + t3159*t3656 - 1.250132*(t3095*t3641 + t3028*t3656) + 0.043925*t3875 - 0.166996*(t3323*t442 + t3276*t562) + t3276*t595 + t276*t35*t910;
  p_output1(11)=0;
  p_output1(12)=t1429*t4067 + t1776*t4109 + t2347*t4277 + t2772*t4311 + t2991*t4395 + t3127*t4468 + t3159*t4578 - 1.250132*(t3095*t4468 + t3028*t4578) + 0.043925*(t3028*t4468 - 1.*t3095*t4578) + t35*t595*t626*t910 - 1.*t276*t728*t910 - 0.166996*(t4067*t442 + t35*t562*t626*t910) + t1140*t35*t910*t931;
  p_output1(13)=t1429*t4795 + t1776*t4979 + t2347*t5152 + t2772*t5217 + t2991*t5354 + t3127*t5406 + t3159*t5432 - 1.250132*(t3095*t5406 + t3028*t5432) + 0.043925*(t3028*t5406 - 1.*t3095*t5432) + t317*t35*t595*t626 - 0.166996*(t442*t4795 + t317*t35*t562*t626) - 1.*t276*t317*t728 + t1140*t317*t35*t931;
  p_output1(14)=-1.*t276*t35 + t1429*t5628 + t1776*t5666 + t2347*t5695 + t2772*t5717 + t2991*t5736 + t3127*t5766 + t3159*t5820 - 1.250132*(t3095*t5766 + t3028*t5820) + 0.043925*(t3028*t5766 - 1.*t3095*t5820) - 1.*t595*t626*t728 - 0.166996*(t442*t5628 - 1.*t562*t626*t728) - 1.*t1140*t728*t931;
  p_output1(15)=t1140*t3276 + t1776*t226*t3276 + t595*t6000 + t2347*t6038 + t2772*t6168 + t2991*t6196 + t3127*t6289 + t3159*t6322 - 1.250132*(t3095*t6289 + t3028*t6322) + 0.043925*(t3028*t6289 - 1.*t3095*t6322) + t1429*t3276*t79 - 0.166996*(t562*t6000 + t3276*t442*t79);
  p_output1(16)=t1215*t595 + t1140*t6436 + t1776*t226*t6436 + t2347*t6558 + t2772*t6635 + t2991*t6673 + t3127*t6703 + t3159*t6736 - 1.250132*(t3095*t6703 + t3028*t6736) + 0.043925*(t3028*t6703 - 1.*t3095*t6736) + t1429*t6436*t79 - 0.166996*(t1215*t562 + t442*t6436*t79);
  p_output1(17)=t1140*t35*t626 + t1776*t226*t35*t626 + t2347*t6829 + t2772*t6907 + t2991*t6921 + t3127*t6940 + t3159*t6986 - 1.250132*(t3095*t6940 + t3028*t6986) + 0.043925*(t3028*t6940 - 1.*t3095*t6986) + t1429*t35*t626*t79 - 1.*t35*t595*t931 - 0.166996*(t35*t442*t626*t79 - 1.*t35*t562*t931);
  p_output1(18)=0;
  p_output1(19)=0;
  p_output1(20)=0;
  p_output1(21)=0;
  p_output1(22)=0;
  p_output1(23)=0;
  p_output1(24)=0;
  p_output1(25)=0;
  p_output1(26)=0;
  p_output1(27)=0;
  p_output1(28)=0;
  p_output1(29)=0;
  p_output1(30)=0;
  p_output1(31)=0;
  p_output1(32)=0;
  p_output1(33)=t1776*t3323 + t3286*t7149 + t1429*t7201 - 0.166996*t442*t7201 - 1.*t2347*t562*t7201 + t2772*t7281 + t2991*t7316 + t3127*t7334 + t3159*t7352 - 1.250132*(t3095*t7334 + t3028*t7352) + 0.043925*(t3028*t7334 - 1.*t3095*t7352) + t35*t7116*t910;
  p_output1(34)=t317*t35*t7116 + t7149*t7515 + t1776*t7543 + t1429*t7567 - 0.166996*t442*t7567 - 1.*t2347*t562*t7567 + t2772*t7609 + t2991*t7622 + t3127*t7679 + t3159*t7719 - 1.250132*(t3095*t7679 + t3028*t7719) + 0.043925*(t3028*t7679 - 1.*t3095*t7719);
  p_output1(35)=-1.*t7116*t728 + t1776*t7805 + t1429*t7842 - 0.166996*t442*t7842 - 1.*t2347*t562*t7842 + t2772*t7871 + t2991*t7915 + t3127*t7943 + t3159*t7960 - 1.250132*(t3095*t7943 + t3028*t7960) + 0.043925*(t3028*t7943 - 1.*t3095*t7960) + t35*t7149*t931;
  p_output1(36)=-0.166996*t3364 + t3276*t8026 + t3323*t8065 + t2347*t8080 + t1615*t2772*t8080 - 1.*t1658*t2991*t8080 + t3127*t8137 + t3159*t8162 - 1.250132*(t3095*t8137 + t3028*t8162) + 0.043925*(t3028*t8137 - 1.*t3095*t8162);
  p_output1(37)=t6436*t8026 + t7543*t8065 + t2347*t8239 + t1615*t2772*t8239 - 1.*t1658*t2991*t8239 - 0.166996*t8267 + t3127*t8304 + t3159*t8325 - 1.250132*(t3095*t8304 + t3028*t8325) + 0.043925*(t3028*t8304 - 1.*t3095*t8325);
  p_output1(38)=t35*t626*t8026 + t7805*t8065 + t2347*t8428 + t1615*t2772*t8428 - 1.*t1658*t2991*t8428 - 0.166996*t8454 + t3127*t8473 + t3159*t8484 - 1.250132*(t3095*t8473 + t3028*t8484) + 0.043925*(t3028*t8473 - 1.*t3095*t8484);
  p_output1(39)=t2772*t3469 + t3339*t8573 + t3364*t8581 + t2991*t8608 + t3159*t8627 + t3127*t8657 + 0.043925*(-1.*t3095*t8627 + t3028*t8657) - 1.250132*(t3028*t8627 + t3095*t8657);
  p_output1(40)=t8267*t8581 + t8573*t8746 + t2991*t8813 + t2772*t8824 + t3159*t8833 + t3127*t8856 + 0.043925*(-1.*t3095*t8833 + t3028*t8856) - 1.250132*(t3028*t8833 + t3095*t8856);
  p_output1(41)=t8454*t8581 + t8573*t9022 + t2991*t9036 + t2772*t9043 + t3159*t9084 + t3127*t9173 + 0.043925*(-1.*t3095*t9084 + t3028*t9173) - 1.250132*(t3028*t9084 + t3095*t9173);
  p_output1(42)=t3159*t3641 + t3411*t9213 + t3469*t9233 + t3127*t9260 - 1.250132*(t3775 + t3095*t9260) + 0.043925*(t3028*t9260 + t9284);
  p_output1(43)=t8824*t9233 + t9213*t9360 + t3159*t9385 + t3127*t9396 + 0.043925*(t3028*t9396 + t9406) - 1.250132*(t3095*t9396 + t9447);
  p_output1(44)=t9043*t9233 + t9213*t9501 + t3159*t9517 + t3127*t9530 + 0.043925*(t3028*t9530 + t9539) - 1.250132*(t3095*t9530 + t9547);
  p_output1(45)=-1.250132*t3875 + 0.043925*(-1.*t3028*t3656 + t9284) + t3641*t9596 + t3656*t9652;
  p_output1(46)=t9385*t9596 + t9652*t9783 + 0.043925*(t9406 - 1.*t3028*t9783) - 1.250132*(t9447 - 1.*t3095*t9783);
  p_output1(47)=t9517*t9596 + t9652*t9873 + 0.043925*(t9539 - 1.*t3028*t9873) - 1.250132*(t9547 - 1.*t3095*t9873);
}


       
void Jp_RightFootFront(Eigen::Matrix<double,3,16> &p_output1, const Eigen::Matrix<double,16,1> &var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
