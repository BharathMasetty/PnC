/*
 * Automatically Generated from Mathematica.
 * Thu 23 Aug 2018 15:50:34 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "RobotSystem/RobotModel/Robot/Draco/DracoGen/kin_eigen/include/Jp_RightFootBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,16> &p_output1, const Eigen::Matrix<double,16,1> &var1)
{
  double t271;
  double t110;
  double t138;
  double t139;
  double t240;
  double t1005;
  double t837;
  double t977;
  double t1033;
  double t313;
  double t323;
  double t379;
  double t784;
  double t106;
  double t1335;
  double t1336;
  double t1375;
  double t993;
  double t1071;
  double t1072;
  double t1650;
  double t1775;
  double t1869;
  double t1884;
  double t1938;
  double t1953;
  double t2025;
  double t2314;
  double t2337;
  double t2361;
  double t2555;
  double t2569;
  double t2625;
  double t2686;
  double t2693;
  double t2702;
  double t2734;
  double t2764;
  double t2771;
  double t2793;
  double t2890;
  double t2942;
  double t3033;
  double t3117;
  double t3164;
  double t3214;
  double t3313;
  double t3359;
  double t3361;
  double t3364;
  double t3454;
  double t3504;
  double t3514;
  double t229;
  double t241;
  double t268;
  double t396;
  double t806;
  double t820;
  double t1149;
  double t1241;
  double t1306;
  double t1437;
  double t1446;
  double t1534;
  double t3800;
  double t3805;
  double t3997;
  double t2020;
  double t2197;
  double t2285;
  double t3650;
  double t3668;
  double t3710;
  double t4061;
  double t4095;
  double t4129;
  double t2450;
  double t2458;
  double t2470;
  double t2721;
  double t2753;
  double t2755;
  double t4249;
  double t4258;
  double t4272;
  double t4492;
  double t4540;
  double t4541;
  double t2810;
  double t2856;
  double t2887;
  double t3219;
  double t3327;
  double t3351;
  double t4579;
  double t4592;
  double t4601;
  double t4634;
  double t4635;
  double t4676;
  double t3400;
  double t3449;
  double t3452;
  double t4779;
  double t4807;
  double t4820;
  double t4857;
  double t4871;
  double t4879;
  double t5074;
  double t5079;
  double t5086;
  double t5099;
  double t5103;
  double t5104;
  double t5191;
  double t5216;
  double t5236;
  double t5293;
  double t5313;
  double t5315;
  double t5326;
  double t5335;
  double t5344;
  double t5357;
  double t5360;
  double t5364;
  double t5396;
  double t5398;
  double t5405;
  double t5635;
  double t5641;
  double t5651;
  double t5687;
  double t5692;
  double t5698;
  double t5721;
  double t5728;
  double t5729;
  double t5762;
  double t5775;
  double t5809;
  double t5830;
  double t5839;
  double t5840;
  double t5854;
  double t5862;
  double t5864;
  double t5884;
  double t5909;
  double t5933;
  double t6058;
  double t6066;
  double t6074;
  double t6093;
  double t6094;
  double t6099;
  double t6182;
  double t6195;
  double t6207;
  double t6220;
  double t6222;
  double t6232;
  double t6248;
  double t6249;
  double t6250;
  double t6259;
  double t6298;
  double t6301;
  double t6312;
  double t6358;
  double t6373;
  double t6529;
  double t6540;
  double t6546;
  double t6565;
  double t6578;
  double t6593;
  double t6627;
  double t6630;
  double t6631;
  double t6644;
  double t6660;
  double t6664;
  double t6675;
  double t6677;
  double t6697;
  double t6719;
  double t6723;
  double t6728;
  double t6831;
  double t6842;
  double t6856;
  double t6895;
  double t6905;
  double t6907;
  double t6938;
  double t6952;
  double t6955;
  double t6969;
  double t6974;
  double t6977;
  double t6987;
  double t7008;
  double t7009;
  double t7030;
  double t7031;
  double t7034;
  double t7117;
  double t7135;
  double t7136;
  double t7181;
  double t7185;
  double t7188;
  double t7196;
  double t7207;
  double t7212;
  double t7240;
  double t7241;
  double t7242;
  double t7249;
  double t7273;
  double t7275;
  double t7434;
  double t7439;
  double t7445;
  double t7454;
  double t7473;
  double t7478;
  double t7488;
  double t7498;
  double t7511;
  double t7529;
  double t7530;
  double t7540;
  double t7571;
  double t7574;
  double t7580;
  double t7385;
  double t7395;
  double t7404;
  double t7413;
  double t7428;
  double t7661;
  double t7663;
  double t7679;
  double t7709;
  double t7711;
  double t7688;
  double t7691;
  double t7700;
  double t7738;
  double t7746;
  double t7756;
  double t7760;
  double t7764;
  double t7767;
  double t7799;
  double t7805;
  double t7811;
  double t7814;
  double t7817;
  double t7824;
  double t7899;
  double t7913;
  double t7917;
  double t7881;
  double t7892;
  double t7894;
  double t7952;
  double t7956;
  double t7963;
  double t7998;
  double t7999;
  double t8010;
  double t8026;
  double t8031;
  double t8033;
  double t8039;
  double t8040;
  double t8041;
  double t8203;
  double t8211;
  double t8224;
  double t8255;
  double t8257;
  double t8263;
  double t8284;
  double t8295;
  double t8298;
  double t8160;
  double t8165;
  double t8171;
  double t8176;
  double t8181;
  double t8380;
  double t8384;
  double t8391;
  double t8431;
  double t8433;
  double t8445;
  double t8449;
  double t8451;
  double t8452;
  double t8533;
  double t8534;
  double t8538;
  double t8592;
  double t8593;
  double t8609;
  double t8637;
  double t8650;
  double t8651;
  double t8859;
  double t8861;
  double t8864;
  double t8881;
  double t8883;
  double t8916;
  double t8918;
  double t8951;
  double t8767;
  double t8777;
  double t8796;
  double t8817;
  double t8832;
  double t8400;
  double t8413;
  double t8424;
  double t9051;
  double t9053;
  double t9058;
  double t9065;
  double t9071;
  double t9072;
  double t9088;
  double t9091;
  double t9105;
  double t9111;
  double t9118;
  double t9122;
  double t9174;
  double t9175;
  double t9179;
  double t8545;
  double t8581;
  double t8584;
  double t9230;
  double t9232;
  double t9240;
  double t9280;
  double t9282;
  double t9287;
  double t9290;
  double t9298;
  double t9299;
  double t9327;
  double t9328;
  double t9329;
  double t9355;
  double t9360;
  double t9361;
  double t9473;
  double t9518;
  double t4958;
  double t9435;
  double t9439;
  double t9444;
  double t9455;
  double t9457;
  double t9576;
  double t9577;
  double t9581;
  double t9592;
  double t9595;
  double t9603;
  double t9611;
  double t9699;
  double t9716;
  double t9724;
  double t9731;
  double t9738;
  double t9748;
  double t9754;
  double t9531;
  double t4977;
  double t4991;
  double t9799;
  double t9803;
  double t9807;
  double t9815;
  double t9818;
  double t9643;
  double t9831;
  double t9832;
  double t9833;
  double t9671;
  double t9762;
  double t9845;
  double t9846;
  double t9848;
  double t9782;
  t271 = Sin(var1[3]);
  t110 = Cos(var1[11]);
  t138 = -1.*t110;
  t139 = 1. + t138;
  t240 = Sin(var1[11]);
  t1005 = Cos(var1[3]);
  t837 = Cos(var1[5]);
  t977 = Sin(var1[4]);
  t1033 = Sin(var1[5]);
  t313 = Cos(var1[12]);
  t323 = -1.*t313;
  t379 = 1. + t323;
  t784 = Sin(var1[12]);
  t106 = Cos(var1[4]);
  t1335 = -1.*t1005*t837;
  t1336 = -1.*t271*t977*t1033;
  t1375 = t1335 + t1336;
  t993 = -1.*t837*t271*t977;
  t1071 = t1005*t1033;
  t1072 = t993 + t1071;
  t1650 = t106*t240*t271;
  t1775 = t110*t1375;
  t1869 = t1650 + t1775;
  t1884 = Cos(var1[13]);
  t1938 = -1.*t1884;
  t1953 = 1. + t1938;
  t2025 = Sin(var1[13]);
  t2314 = -1.*t110*t106*t271;
  t2337 = t240*t1375;
  t2361 = t2314 + t2337;
  t2555 = t313*t1072;
  t2569 = -1.*t784*t1869;
  t2625 = t2555 + t2569;
  t2686 = Cos(var1[14]);
  t2693 = -1.*t2686;
  t2702 = 1. + t2693;
  t2734 = Sin(var1[14]);
  t2764 = t2025*t2361;
  t2771 = t1884*t2625;
  t2793 = t2764 + t2771;
  t2890 = t1884*t2361;
  t2942 = -1.*t2025*t2625;
  t3033 = t2890 + t2942;
  t3117 = Cos(var1[15]);
  t3164 = -1.*t3117;
  t3214 = 1. + t3164;
  t3313 = Sin(var1[15]);
  t3359 = -1.*t2734*t2793;
  t3361 = t2686*t3033;
  t3364 = t3359 + t3361;
  t3454 = t2686*t2793;
  t3504 = t2734*t3033;
  t3514 = t3454 + t3504;
  t229 = -0.0222*t139;
  t241 = -0.087*t240;
  t268 = 0. + t229 + t241;
  t396 = -0.3151*t379;
  t806 = 0.157*t784;
  t820 = 0. + t396 + t806;
  t1149 = -0.087*t139;
  t1241 = 0.0222*t240;
  t1306 = 0. + t1149 + t1241;
  t1437 = -0.157*t379;
  t1446 = -0.3151*t784;
  t1534 = 0. + t1437 + t1446;
  t3800 = -1.*t837*t271;
  t3805 = t1005*t977*t1033;
  t3997 = t3800 + t3805;
  t2020 = -0.0222*t1953;
  t2197 = 0.3801*t2025;
  t2285 = 0. + t2020 + t2197;
  t3650 = t1005*t837*t977;
  t3668 = t271*t1033;
  t3710 = t3650 + t3668;
  t4061 = -1.*t1005*t106*t240;
  t4095 = t110*t3997;
  t4129 = t4061 + t4095;
  t2450 = -0.3801*t1953;
  t2458 = -0.0222*t2025;
  t2470 = 0. + t2450 + t2458;
  t2721 = -0.8601*t2702;
  t2753 = -0.0222*t2734;
  t2755 = 0. + t2721 + t2753;
  t4249 = t110*t1005*t106;
  t4258 = t240*t3997;
  t4272 = t4249 + t4258;
  t4492 = t313*t3710;
  t4540 = -1.*t784*t4129;
  t4541 = t4492 + t4540;
  t2810 = -0.0222*t2702;
  t2856 = 0.8601*t2734;
  t2887 = 0. + t2810 + t2856;
  t3219 = -0.0211*t3214;
  t3327 = 1.3401*t3313;
  t3351 = 0. + t3219 + t3327;
  t4579 = t2025*t4272;
  t4592 = t1884*t4541;
  t4601 = t4579 + t4592;
  t4634 = t1884*t4272;
  t4635 = -1.*t2025*t4541;
  t4676 = t4634 + t4635;
  t3400 = -1.3401*t3214;
  t3449 = -0.0211*t3313;
  t3452 = 0. + t3400 + t3449;
  t4779 = -1.*t2734*t4601;
  t4807 = t2686*t4676;
  t4820 = t4779 + t4807;
  t4857 = t2686*t4601;
  t4871 = t2734*t4676;
  t4879 = t4857 + t4871;
  t5074 = t1005*t240*t977;
  t5079 = t110*t1005*t106*t1033;
  t5086 = t5074 + t5079;
  t5099 = -1.*t110*t1005*t977;
  t5103 = t1005*t106*t240*t1033;
  t5104 = t5099 + t5103;
  t5191 = t313*t1005*t106*t837;
  t5216 = -1.*t784*t5086;
  t5236 = t5191 + t5216;
  t5293 = t2025*t5104;
  t5313 = t1884*t5236;
  t5315 = t5293 + t5313;
  t5326 = t1884*t5104;
  t5335 = -1.*t2025*t5236;
  t5344 = t5326 + t5335;
  t5357 = -1.*t2734*t5315;
  t5360 = t2686*t5344;
  t5364 = t5357 + t5360;
  t5396 = t2686*t5315;
  t5398 = t2734*t5344;
  t5405 = t5396 + t5398;
  t5635 = t240*t271*t977;
  t5641 = t110*t106*t271*t1033;
  t5651 = t5635 + t5641;
  t5687 = -1.*t110*t271*t977;
  t5692 = t106*t240*t271*t1033;
  t5698 = t5687 + t5692;
  t5721 = t313*t106*t837*t271;
  t5728 = -1.*t784*t5651;
  t5729 = t5721 + t5728;
  t5762 = t2025*t5698;
  t5775 = t1884*t5729;
  t5809 = t5762 + t5775;
  t5830 = t1884*t5698;
  t5839 = -1.*t2025*t5729;
  t5840 = t5830 + t5839;
  t5854 = -1.*t2734*t5809;
  t5862 = t2686*t5840;
  t5864 = t5854 + t5862;
  t5884 = t2686*t5809;
  t5909 = t2734*t5840;
  t5933 = t5884 + t5909;
  t6058 = t106*t240;
  t6066 = -1.*t110*t977*t1033;
  t6074 = t6058 + t6066;
  t6093 = -1.*t110*t106;
  t6094 = -1.*t240*t977*t1033;
  t6099 = t6093 + t6094;
  t6182 = -1.*t313*t837*t977;
  t6195 = -1.*t784*t6074;
  t6207 = t6182 + t6195;
  t6220 = t2025*t6099;
  t6222 = t1884*t6207;
  t6232 = t6220 + t6222;
  t6248 = t1884*t6099;
  t6249 = -1.*t2025*t6207;
  t6250 = t6248 + t6249;
  t6259 = -1.*t2734*t6232;
  t6298 = t2686*t6250;
  t6301 = t6259 + t6298;
  t6312 = t2686*t6232;
  t6358 = t2734*t6250;
  t6373 = t6312 + t6358;
  t6529 = t837*t271;
  t6540 = -1.*t1005*t977*t1033;
  t6546 = t6529 + t6540;
  t6565 = -1.*t110*t784*t3710;
  t6578 = t313*t6546;
  t6593 = t6565 + t6578;
  t6627 = t240*t2025*t3710;
  t6630 = t1884*t6593;
  t6631 = t6627 + t6630;
  t6644 = t1884*t240*t3710;
  t6660 = -1.*t2025*t6593;
  t6664 = t6644 + t6660;
  t6675 = -1.*t2734*t6631;
  t6677 = t2686*t6664;
  t6697 = t6675 + t6677;
  t6719 = t2686*t6631;
  t6723 = t2734*t6664;
  t6728 = t6719 + t6723;
  t6831 = t837*t271*t977;
  t6842 = -1.*t1005*t1033;
  t6856 = t6831 + t6842;
  t6895 = -1.*t110*t784*t6856;
  t6905 = t313*t1375;
  t6907 = t6895 + t6905;
  t6938 = t240*t2025*t6856;
  t6952 = t1884*t6907;
  t6955 = t6938 + t6952;
  t6969 = t1884*t240*t6856;
  t6974 = -1.*t2025*t6907;
  t6977 = t6969 + t6974;
  t6987 = -1.*t2734*t6955;
  t7008 = t2686*t6977;
  t7009 = t6987 + t7008;
  t7030 = t2686*t6955;
  t7031 = t2734*t6977;
  t7034 = t7030 + t7031;
  t7117 = -1.*t110*t106*t837*t784;
  t7135 = -1.*t313*t106*t1033;
  t7136 = t7117 + t7135;
  t7181 = t106*t837*t240*t2025;
  t7185 = t1884*t7136;
  t7188 = t7181 + t7185;
  t7196 = t1884*t106*t837*t240;
  t7207 = -1.*t2025*t7136;
  t7212 = t7196 + t7207;
  t7240 = -1.*t2734*t7188;
  t7241 = t2686*t7212;
  t7242 = t7240 + t7241;
  t7249 = t2686*t7188;
  t7273 = t2734*t7212;
  t7275 = t7249 + t7273;
  t7434 = -1.*t110*t1005*t106;
  t7439 = -1.*t240*t3997;
  t7445 = t7434 + t7439;
  t7454 = t2025*t4129;
  t7473 = -1.*t1884*t784*t7445;
  t7478 = t7454 + t7473;
  t7488 = t1884*t4129;
  t7498 = t784*t2025*t7445;
  t7511 = t7488 + t7498;
  t7529 = -1.*t2734*t7478;
  t7530 = t2686*t7511;
  t7540 = t7529 + t7530;
  t7571 = t2686*t7478;
  t7574 = t2734*t7511;
  t7580 = t7571 + t7574;
  t7385 = -0.087*t110;
  t7395 = -0.0222*t240;
  t7404 = t7385 + t7395;
  t7413 = 0.0222*t110;
  t7428 = t7413 + t241;
  t7661 = t1005*t837;
  t7663 = t271*t977*t1033;
  t7679 = t7661 + t7663;
  t7709 = -1.*t240*t7679;
  t7711 = t2314 + t7709;
  t7688 = -1.*t106*t240*t271;
  t7691 = t110*t7679;
  t7700 = t7688 + t7691;
  t7738 = t2025*t7700;
  t7746 = -1.*t1884*t784*t7711;
  t7756 = t7738 + t7746;
  t7760 = t1884*t7700;
  t7764 = t784*t2025*t7711;
  t7767 = t7760 + t7764;
  t7799 = -1.*t2734*t7756;
  t7805 = t2686*t7767;
  t7811 = t7799 + t7805;
  t7814 = t2686*t7756;
  t7817 = t2734*t7767;
  t7824 = t7814 + t7817;
  t7899 = t110*t977;
  t7913 = -1.*t106*t240*t1033;
  t7917 = t7899 + t7913;
  t7881 = t240*t977;
  t7892 = t110*t106*t1033;
  t7894 = t7881 + t7892;
  t7952 = t2025*t7894;
  t7956 = -1.*t1884*t784*t7917;
  t7963 = t7952 + t7956;
  t7998 = t1884*t7894;
  t7999 = t784*t2025*t7917;
  t8010 = t7998 + t7999;
  t8026 = -1.*t2734*t7963;
  t8031 = t2686*t8010;
  t8033 = t8026 + t8031;
  t8039 = t2686*t7963;
  t8040 = t2734*t8010;
  t8041 = t8039 + t8040;
  t8203 = -1.*t784*t3710;
  t8211 = -1.*t313*t4129;
  t8224 = t8203 + t8211;
  t8255 = -1.*t2686*t2025*t8224;
  t8257 = -1.*t1884*t2734*t8224;
  t8263 = t8255 + t8257;
  t8284 = t1884*t2686*t8224;
  t8295 = -1.*t2025*t2734*t8224;
  t8298 = t8284 + t8295;
  t8160 = 0.157*t313;
  t8165 = t8160 + t1446;
  t8171 = -0.3151*t313;
  t8176 = -0.157*t784;
  t8181 = t8171 + t8176;
  t8380 = -1.*t784*t6856;
  t8384 = -1.*t313*t7700;
  t8391 = t8380 + t8384;
  t8431 = -1.*t2686*t2025*t8391;
  t8433 = -1.*t1884*t2734*t8391;
  t8445 = t8431 + t8433;
  t8449 = t1884*t2686*t8391;
  t8451 = -1.*t2025*t2734*t8391;
  t8452 = t8449 + t8451;
  t8533 = -1.*t106*t837*t784;
  t8534 = -1.*t313*t7894;
  t8538 = t8533 + t8534;
  t8592 = -1.*t2686*t2025*t8538;
  t8593 = -1.*t1884*t2734*t8538;
  t8609 = t8592 + t8593;
  t8637 = t1884*t2686*t8538;
  t8650 = -1.*t2025*t2734*t8538;
  t8651 = t8637 + t8650;
  t8859 = -1.*t2025*t4272;
  t8861 = -1.*t1884*t4541;
  t8864 = t8859 + t8861;
  t8881 = t2734*t8864;
  t8883 = t8881 + t4807;
  t8916 = t2686*t8864;
  t8918 = -1.*t2734*t4676;
  t8951 = t8916 + t8918;
  t8767 = 0.3801*t1884;
  t8777 = t8767 + t2458;
  t8796 = -0.0222*t1884;
  t8817 = -0.3801*t2025;
  t8832 = t8796 + t8817;
  t8400 = t313*t6856;
  t8413 = -1.*t784*t7700;
  t8424 = t8400 + t8413;
  t9051 = t110*t106*t271;
  t9053 = t240*t7679;
  t9058 = t9051 + t9053;
  t9065 = -1.*t2025*t9058;
  t9071 = -1.*t1884*t8424;
  t9072 = t9065 + t9071;
  t9088 = t1884*t9058;
  t9091 = -1.*t2025*t8424;
  t9105 = t9088 + t9091;
  t9111 = t2734*t9072;
  t9118 = t2686*t9105;
  t9122 = t9111 + t9118;
  t9174 = t2686*t9072;
  t9175 = -1.*t2734*t9105;
  t9179 = t9174 + t9175;
  t8545 = t313*t106*t837;
  t8581 = -1.*t784*t7894;
  t8584 = t8545 + t8581;
  t9230 = -1.*t110*t977;
  t9232 = t106*t240*t1033;
  t9240 = t9230 + t9232;
  t9280 = -1.*t2025*t9240;
  t9282 = -1.*t1884*t8584;
  t9287 = t9280 + t9282;
  t9290 = t1884*t9240;
  t9298 = -1.*t2025*t8584;
  t9299 = t9290 + t9298;
  t9327 = t2734*t9287;
  t9328 = t2686*t9299;
  t9329 = t9327 + t9328;
  t9355 = t2686*t9287;
  t9360 = -1.*t2734*t9299;
  t9361 = t9355 + t9360;
  t9473 = -1.*t2686*t4601;
  t9518 = t9473 + t8918;
  t4958 = t3117*t4820;
  t9435 = -0.0222*t2686;
  t9439 = -0.8601*t2734;
  t9444 = t9435 + t9439;
  t9455 = 0.8601*t2686;
  t9457 = t9455 + t2753;
  t9576 = t2025*t9058;
  t9577 = t1884*t8424;
  t9581 = t9576 + t9577;
  t9592 = -1.*t2734*t9581;
  t9595 = t9592 + t9118;
  t9603 = -1.*t2686*t9581;
  t9611 = t9603 + t9175;
  t9699 = t2025*t9240;
  t9716 = t1884*t8584;
  t9724 = t9699 + t9716;
  t9731 = -1.*t2734*t9724;
  t9738 = t9731 + t9328;
  t9748 = -1.*t2686*t9724;
  t9754 = t9748 + t9360;
  t9531 = -1.*t3313*t4820;
  t4977 = -1.*t3313*t4879;
  t4991 = t4958 + t4977;
  t9799 = 1.3401*t3117;
  t9803 = t9799 + t3449;
  t9807 = -0.0211*t3117;
  t9815 = -1.3401*t3313;
  t9818 = t9807 + t9815;
  t9643 = -1.*t3313*t9595;
  t9831 = t2686*t9581;
  t9832 = t2734*t9105;
  t9833 = t9831 + t9832;
  t9671 = t3117*t9595;
  t9762 = -1.*t3313*t9738;
  t9845 = t2686*t9724;
  t9846 = t2734*t9299;
  t9848 = t9845 + t9846;
  t9782 = t3117*t9738;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1306*t1375 + t1534*t1869 + t2285*t2361 + t2470*t2625 - 1.*t106*t268*t271 + t2755*t2793 + t2887*t3033 + t3351*t3364 + t3452*t3514 - 1.325152*(t3313*t3364 + t3117*t3514) + 0.043912*(t3117*t3364 - 1.*t3313*t3514) - 0.16705*(t1869*t313 + t1072*t784) + t1072*t820;
  p_output1(10)=t1005*t106*t268 + t1306*t3997 + t1534*t4129 + t2285*t4272 + t2470*t4541 + t2755*t4601 + t2887*t4676 + t3351*t4820 + t3452*t4879 - 1.325152*(t3313*t4820 + t3117*t4879) + 0.043912*t4991 - 0.16705*(t313*t4129 + t3710*t784) + t3710*t820;
  p_output1(11)=0;
  p_output1(12)=t1005*t1033*t106*t1306 + t1534*t5086 + t2285*t5104 + t2470*t5236 + t2755*t5315 + t2887*t5344 + t3351*t5364 + t3452*t5405 - 1.325152*(t3313*t5364 + t3117*t5405) + 0.043912*(t3117*t5364 - 1.*t3313*t5405) + t1005*t106*t820*t837 - 0.16705*(t313*t5086 + t1005*t106*t784*t837) - 1.*t1005*t268*t977;
  p_output1(13)=t1033*t106*t1306*t271 + t1534*t5651 + t2285*t5698 + t2470*t5729 + t2755*t5809 + t2887*t5840 + t3351*t5864 + t3452*t5933 - 1.325152*(t3313*t5864 + t3117*t5933) + 0.043912*(t3117*t5864 - 1.*t3313*t5933) + t106*t271*t820*t837 - 0.16705*(t313*t5651 + t106*t271*t784*t837) - 1.*t268*t271*t977;
  p_output1(14)=-1.*t106*t268 + t1534*t6074 + t2285*t6099 + t2470*t6207 + t2755*t6232 + t2887*t6250 + t3351*t6301 + t3452*t6373 - 1.325152*(t3313*t6301 + t3117*t6373) + 0.043912*(t3117*t6301 - 1.*t3313*t6373) - 1.*t1033*t1306*t977 - 1.*t820*t837*t977 - 0.16705*(t313*t6074 - 1.*t784*t837*t977);
  p_output1(15)=t1306*t3710 + t110*t1534*t3710 + t2285*t240*t3710 + t2470*t6593 + t2755*t6631 + t2887*t6664 + t3351*t6697 + t3452*t6728 - 1.325152*(t3313*t6697 + t3117*t6728) + 0.043912*(t3117*t6697 - 1.*t3313*t6728) - 0.16705*(t110*t313*t3710 + t6546*t784) + t6546*t820;
  p_output1(16)=t1306*t6856 + t110*t1534*t6856 + t2285*t240*t6856 + t2470*t6907 + t2755*t6955 + t2887*t6977 + t3351*t7009 + t3452*t7034 - 1.325152*(t3313*t7009 + t3117*t7034) + 0.043912*(t3117*t7009 - 1.*t3313*t7034) - 0.16705*(t110*t313*t6856 + t1375*t784) + t1375*t820;
  p_output1(17)=t2470*t7136 + t2755*t7188 + t2887*t7212 + t3351*t7242 + t3452*t7275 - 1.325152*(t3313*t7242 + t3117*t7275) + 0.043912*(t3117*t7242 - 1.*t3313*t7275) - 1.*t1033*t106*t820 + t106*t1306*t837 + t106*t110*t1534*t837 + t106*t2285*t240*t837 - 0.16705*(-1.*t1033*t106*t784 + t106*t110*t313*t837);
  p_output1(18)=0;
  p_output1(19)=0;
  p_output1(20)=0;
  p_output1(21)=0;
  p_output1(22)=0;
  p_output1(23)=0;
  p_output1(24)=0;
  p_output1(25)=0;
  p_output1(26)=0;
  p_output1(27)=0;
  p_output1(28)=0;
  p_output1(29)=0;
  p_output1(30)=0;
  p_output1(31)=0;
  p_output1(32)=0;
  p_output1(33)=t2285*t4129 + t1005*t106*t7404 + t3997*t7428 + t1534*t7445 - 0.16705*t313*t7445 + t2755*t7478 + t2887*t7511 + t3351*t7540 + t3452*t7580 - 1.325152*(t3313*t7540 + t3117*t7580) + 0.043912*(t3117*t7540 - 1.*t3313*t7580) - 1.*t2470*t7445*t784;
  p_output1(34)=t106*t271*t7404 + t7428*t7679 + t2285*t7700 + t1534*t7711 - 0.16705*t313*t7711 + t2755*t7756 + t2887*t7767 + t3351*t7811 + t3452*t7824 - 1.325152*(t3313*t7811 + t3117*t7824) + 0.043912*(t3117*t7811 - 1.*t3313*t7824) - 1.*t2470*t7711*t784;
  p_output1(35)=t1033*t106*t7428 + t2285*t7894 + t1534*t7917 - 0.16705*t313*t7917 - 1.*t2470*t784*t7917 + t2755*t7963 + t2887*t8010 + t3351*t8033 + t3452*t8041 - 1.325152*(t3313*t8033 + t3117*t8041) + 0.043912*(t3117*t8033 - 1.*t3313*t8041) - 1.*t7404*t977;
  p_output1(36)=-0.16705*t4541 + t3710*t8165 + t4129*t8181 + t2470*t8224 + t1884*t2755*t8224 - 1.*t2025*t2887*t8224 + t3351*t8263 + t3452*t8298 - 1.325152*(t3313*t8263 + t3117*t8298) + 0.043912*(t3117*t8263 - 1.*t3313*t8298);
  p_output1(37)=t6856*t8165 + t7700*t8181 + t2470*t8391 + t1884*t2755*t8391 - 1.*t2025*t2887*t8391 - 0.16705*t8424 + t3351*t8445 + t3452*t8452 - 1.325152*(t3313*t8445 + t3117*t8452) + 0.043912*(t3117*t8445 - 1.*t3313*t8452);
  p_output1(38)=t7894*t8181 + t106*t8165*t837 + t2470*t8538 + t1884*t2755*t8538 - 1.*t2025*t2887*t8538 - 0.16705*t8584 + t3351*t8609 + t3452*t8651 - 1.325152*(t3313*t8609 + t3117*t8651) + 0.043912*(t3117*t8609 - 1.*t3313*t8651);
  p_output1(39)=t2755*t4676 + t4272*t8777 + t4541*t8832 + t2887*t8864 + t3452*t8883 + t3351*t8951 + 0.043912*(-1.*t3313*t8883 + t3117*t8951) - 1.325152*(t3117*t8883 + t3313*t8951);
  p_output1(40)=t8424*t8832 + t8777*t9058 + t2887*t9072 + t2755*t9105 + t3452*t9122 + t3351*t9179 + 0.043912*(-1.*t3313*t9122 + t3117*t9179) - 1.325152*(t3117*t9122 + t3313*t9179);
  p_output1(41)=t8584*t8832 + t8777*t9240 + t2887*t9287 + t2755*t9299 + t3452*t9329 + t3351*t9361 + 0.043912*(-1.*t3313*t9329 + t3117*t9361) - 1.325152*(t3117*t9329 + t3313*t9361);
  p_output1(42)=t3452*t4820 + t4601*t9444 + t4676*t9457 + t3351*t9518 - 1.325152*(t4958 + t3313*t9518) + 0.043912*(t3117*t9518 + t9531);
  p_output1(43)=t9105*t9457 + t9444*t9581 + t3452*t9595 + t3351*t9611 + 0.043912*(t3117*t9611 + t9643) - 1.325152*(t3313*t9611 + t9671);
  p_output1(44)=t9299*t9457 + t9444*t9724 + t3452*t9738 + t3351*t9754 + 0.043912*(t3117*t9754 + t9762) - 1.325152*(t3313*t9754 + t9782);
  p_output1(45)=-1.325152*t4991 + 0.043912*(-1.*t3117*t4879 + t9531) + t4820*t9803 + t4879*t9818;
  p_output1(46)=t9595*t9803 + t9818*t9833 + 0.043912*(t9643 - 1.*t3117*t9833) - 1.325152*(t9671 - 1.*t3313*t9833);
  p_output1(47)=t9738*t9803 + t9818*t9848 + 0.043912*(t9762 - 1.*t3117*t9848) - 1.325152*(t9782 - 1.*t3313*t9848);
}


       
void Jp_RightFootBottom(Eigen::Matrix<double,3,16> &p_output1, const Eigen::Matrix<double,16,1> &var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
