/*
 * Automatically Generated from Mathematica.
 * Thu 16 Aug 2018 18:05:08 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_LeftFootBack.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,16> &p_output1, const Eigen::Matrix<double,16,1> &var1)
{
  double t190;
  double t393;
  double t504;
  double t515;
  double t623;
  double t107;
  double t148;
  double t166;
  double t280;
  double t284;
  double t342;
  double t371;
  double t767;
  double t897;
  double t954;
  double t962;
  double t1001;
  double t860;
  double t862;
  double t889;
  double t1237;
  double t1242;
  double t1288;
  double t2091;
  double t2112;
  double t2142;
  double t2346;
  double t1950;
  double t2046;
  double t2073;
  double t2527;
  double t2564;
  double t2578;
  double t2767;
  double t2776;
  double t2777;
  double t2820;
  double t2894;
  double t2930;
  double t2958;
  double t3158;
  double t3166;
  double t3198;
  double t3284;
  double t3299;
  double t3316;
  double t3329;
  double t3510;
  double t3529;
  double t3539;
  double t3604;
  double t3690;
  double t3694;
  double t525;
  double t657;
  double t677;
  double t802;
  double t831;
  double t837;
  double t4148;
  double t4154;
  double t4161;
  double t999;
  double t1052;
  double t1062;
  double t1291;
  double t1305;
  double t1334;
  double t4189;
  double t4206;
  double t4297;
  double t4418;
  double t4420;
  double t4426;
  double t2332;
  double t2349;
  double t2350;
  double t2631;
  double t2698;
  double t2756;
  double t2795;
  double t2832;
  double t2891;
  double t4566;
  double t4588;
  double t4608;
  double t4717;
  double t4735;
  double t4760;
  double t3069;
  double t3089;
  double t3128;
  double t3324;
  double t3364;
  double t3400;
  double t4899;
  double t4919;
  double t4961;
  double t4979;
  double t5025;
  double t5027;
  double t3553;
  double t3583;
  double t3598;
  double t5038;
  double t5078;
  double t5090;
  double t5116;
  double t5134;
  double t5139;
  double t5453;
  double t5466;
  double t5569;
  double t5733;
  double t5812;
  double t5829;
  double t5837;
  double t5838;
  double t5845;
  double t5860;
  double t5871;
  double t5877;
  double t5899;
  double t5903;
  double t5906;
  double t5952;
  double t5962;
  double t5964;
  double t5980;
  double t6000;
  double t6002;
  double t6116;
  double t6119;
  double t6122;
  double t6222;
  double t6223;
  double t6286;
  double t6299;
  double t6333;
  double t6341;
  double t6357;
  double t6368;
  double t6378;
  double t6418;
  double t6421;
  double t6422;
  double t6448;
  double t6454;
  double t6461;
  double t6469;
  double t6480;
  double t6494;
  double t6608;
  double t6613;
  double t6620;
  double t6657;
  double t6662;
  double t6675;
  double t6729;
  double t6731;
  double t6736;
  double t6741;
  double t6744;
  double t6745;
  double t6788;
  double t6789;
  double t6793;
  double t6795;
  double t6806;
  double t6812;
  double t6824;
  double t6829;
  double t6838;
  double t6962;
  double t6976;
  double t7001;
  double t7055;
  double t7064;
  double t7073;
  double t7113;
  double t7116;
  double t7126;
  double t7149;
  double t7153;
  double t7159;
  double t7197;
  double t7199;
  double t7209;
  double t7221;
  double t7225;
  double t7228;
  double t7324;
  double t7331;
  double t7332;
  double t7373;
  double t7387;
  double t7405;
  double t7424;
  double t7439;
  double t7444;
  double t7471;
  double t7486;
  double t7491;
  double t7501;
  double t7515;
  double t7517;
  double t7530;
  double t7543;
  double t7552;
  double t7690;
  double t7691;
  double t7701;
  double t7720;
  double t7727;
  double t7730;
  double t7743;
  double t7746;
  double t7753;
  double t7761;
  double t7773;
  double t7775;
  double t7789;
  double t7792;
  double t7798;
  double t7883;
  double t7896;
  double t7898;
  double t7932;
  double t7943;
  double t7946;
  double t7958;
  double t7972;
  double t7975;
  double t7991;
  double t8000;
  double t8012;
  double t8020;
  double t8024;
  double t8036;
  double t7865;
  double t7866;
  double t7867;
  double t7871;
  double t7876;
  double t8082;
  double t8086;
  double t8087;
  double t8091;
  double t8092;
  double t8113;
  double t8123;
  double t8125;
  double t8129;
  double t8131;
  double t8133;
  double t8145;
  double t8162;
  double t8163;
  double t8168;
  double t8170;
  double t8172;
  double t8184;
  double t8200;
  double t8213;
  double t8281;
  double t8293;
  double t8302;
  double t8316;
  double t8318;
  double t8324;
  double t8328;
  double t8330;
  double t8333;
  double t8381;
  double t8383;
  double t8389;
  double t8406;
  double t8407;
  double t8408;
  double t8415;
  double t8422;
  double t8426;
  double t8545;
  double t8547;
  double t8556;
  double t8596;
  double t8602;
  double t8603;
  double t8611;
  double t8613;
  double t8621;
  double t8482;
  double t8484;
  double t8494;
  double t8495;
  double t8513;
  double t8699;
  double t8705;
  double t8708;
  double t8747;
  double t8761;
  double t8768;
  double t8782;
  double t8797;
  double t8804;
  double t8870;
  double t8894;
  double t8900;
  double t8947;
  double t8965;
  double t8966;
  double t8981;
  double t8994;
  double t9006;
  double t9099;
  double t9105;
  double t9106;
  double t9126;
  double t9130;
  double t9136;
  double t9137;
  double t9158;
  double t8711;
  double t8714;
  double t8724;
  double t9044;
  double t9057;
  double t9058;
  double t9084;
  double t9093;
  double t9236;
  double t9239;
  double t9244;
  double t9271;
  double t9277;
  double t9279;
  double t9292;
  double t9293;
  double t9294;
  double t9310;
  double t9313;
  double t9314;
  double t9340;
  double t9346;
  double t9356;
  double t8912;
  double t8918;
  double t8924;
  double t9442;
  double t9472;
  double t9477;
  double t9486;
  double t9491;
  double t9495;
  double t9509;
  double t9510;
  double t9511;
  double t9516;
  double t9517;
  double t9526;
  double t9531;
  double t9533;
  double t9536;
  double t9679;
  double t9701;
  double t5406;
  double t9638;
  double t9639;
  double t9645;
  double t9657;
  double t9658;
  double t9795;
  double t9796;
  double t9809;
  double t9824;
  double t9825;
  double t9828;
  double t9829;
  double t9869;
  double t9873;
  double t9875;
  double t9885;
  double t9886;
  double t9889;
  double t9890;
  double t9714;
  double t5413;
  double t5418;
  double t9904;
  double t9906;
  double t9909;
  double t9910;
  double t9912;
  double t9836;
  double t9922;
  double t9926;
  double t9928;
  double t9852;
  double t9894;
  double t9940;
  double t9942;
  double t9943;
  double t9898;
  t190 = Sin(var1[3]);
  t393 = Cos(var1[6]);
  t504 = -1.*t393;
  t515 = 1. + t504;
  t623 = Sin(var1[6]);
  t107 = Cos(var1[3]);
  t148 = Cos(var1[5]);
  t166 = -1.*t107*t148;
  t280 = Sin(var1[4]);
  t284 = Sin(var1[5]);
  t342 = -1.*t190*t280*t284;
  t371 = t166 + t342;
  t767 = Cos(var1[4]);
  t897 = Cos(var1[7]);
  t954 = -1.*t897;
  t962 = 1. + t954;
  t1001 = Sin(var1[7]);
  t860 = t393*t371;
  t862 = t767*t190*t623;
  t889 = t860 + t862;
  t1237 = -1.*t148*t190*t280;
  t1242 = t107*t284;
  t1288 = t1237 + t1242;
  t2091 = Cos(var1[8]);
  t2112 = -1.*t2091;
  t2142 = 1. + t2112;
  t2346 = Sin(var1[8]);
  t1950 = t897*t1288;
  t2046 = -1.*t889*t1001;
  t2073 = t1950 + t2046;
  t2527 = -1.*t767*t393*t190;
  t2564 = t371*t623;
  t2578 = t2527 + t2564;
  t2767 = Cos(var1[9]);
  t2776 = -1.*t2767;
  t2777 = 1. + t2776;
  t2820 = Sin(var1[9]);
  t2894 = t2091*t2073;
  t2930 = t2578*t2346;
  t2958 = t2894 + t2930;
  t3158 = t2091*t2578;
  t3166 = -1.*t2073*t2346;
  t3198 = t3158 + t3166;
  t3284 = Cos(var1[10]);
  t3299 = -1.*t3284;
  t3316 = 1. + t3299;
  t3329 = Sin(var1[10]);
  t3510 = -1.*t2820*t2958;
  t3529 = t2767*t3198;
  t3539 = t3510 + t3529;
  t3604 = t2767*t2958;
  t3690 = t2820*t3198;
  t3694 = t3604 + t3690;
  t525 = 0.087004*t515;
  t657 = 0.022225*t623;
  t677 = 0. + t525 + t657;
  t802 = -0.022225*t515;
  t831 = 0.087004*t623;
  t837 = 0. + t802 + t831;
  t4148 = -1.*t148*t190;
  t4154 = t107*t280*t284;
  t4161 = t4148 + t4154;
  t999 = 0.157004*t962;
  t1052 = -0.31508*t1001;
  t1062 = 0. + t999 + t1052;
  t1291 = -0.31508*t962;
  t1305 = -0.157004*t1001;
  t1334 = 0. + t1291 + t1305;
  t4189 = t393*t4161;
  t4206 = -1.*t107*t767*t623;
  t4297 = t4189 + t4206;
  t4418 = t107*t148*t280;
  t4420 = t190*t284;
  t4426 = t4418 + t4420;
  t2332 = -0.38008*t2142;
  t2349 = -0.022225*t2346;
  t2350 = 0. + t2332 + t2349;
  t2631 = -0.022225*t2142;
  t2698 = 0.38008*t2346;
  t2756 = 0. + t2631 + t2698;
  t2795 = -0.86008*t2777;
  t2832 = -0.022225*t2820;
  t2891 = 0. + t2795 + t2832;
  t4566 = t897*t4426;
  t4588 = -1.*t4297*t1001;
  t4608 = t4566 + t4588;
  t4717 = t107*t767*t393;
  t4735 = t4161*t623;
  t4760 = t4717 + t4735;
  t3069 = -0.022225*t2777;
  t3089 = 0.86008*t2820;
  t3128 = 0. + t3069 + t3089;
  t3324 = -0.021147*t3316;
  t3364 = 1.34008*t3329;
  t3400 = 0. + t3324 + t3364;
  t4899 = t2091*t4608;
  t4919 = t4760*t2346;
  t4961 = t4899 + t4919;
  t4979 = t2091*t4760;
  t5025 = -1.*t4608*t2346;
  t5027 = t4979 + t5025;
  t3553 = -1.34008*t3316;
  t3583 = -0.021147*t3329;
  t3598 = 0. + t3553 + t3583;
  t5038 = -1.*t2820*t4961;
  t5078 = t2767*t5027;
  t5090 = t5038 + t5078;
  t5116 = t2767*t4961;
  t5134 = t2820*t5027;
  t5139 = t5116 + t5134;
  t5453 = t107*t767*t393*t284;
  t5466 = t107*t280*t623;
  t5569 = t5453 + t5466;
  t5733 = t107*t767*t148*t897;
  t5812 = -1.*t5569*t1001;
  t5829 = t5733 + t5812;
  t5837 = -1.*t107*t393*t280;
  t5838 = t107*t767*t284*t623;
  t5845 = t5837 + t5838;
  t5860 = t2091*t5829;
  t5871 = t5845*t2346;
  t5877 = t5860 + t5871;
  t5899 = t2091*t5845;
  t5903 = -1.*t5829*t2346;
  t5906 = t5899 + t5903;
  t5952 = -1.*t2820*t5877;
  t5962 = t2767*t5906;
  t5964 = t5952 + t5962;
  t5980 = t2767*t5877;
  t6000 = t2820*t5906;
  t6002 = t5980 + t6000;
  t6116 = t767*t393*t190*t284;
  t6119 = t190*t280*t623;
  t6122 = t6116 + t6119;
  t6222 = t767*t148*t897*t190;
  t6223 = -1.*t6122*t1001;
  t6286 = t6222 + t6223;
  t6299 = -1.*t393*t190*t280;
  t6333 = t767*t190*t284*t623;
  t6341 = t6299 + t6333;
  t6357 = t2091*t6286;
  t6368 = t6341*t2346;
  t6378 = t6357 + t6368;
  t6418 = t2091*t6341;
  t6421 = -1.*t6286*t2346;
  t6422 = t6418 + t6421;
  t6448 = -1.*t2820*t6378;
  t6454 = t2767*t6422;
  t6461 = t6448 + t6454;
  t6469 = t2767*t6378;
  t6480 = t2820*t6422;
  t6494 = t6469 + t6480;
  t6608 = -1.*t393*t280*t284;
  t6613 = t767*t623;
  t6620 = t6608 + t6613;
  t6657 = -1.*t148*t897*t280;
  t6662 = -1.*t6620*t1001;
  t6675 = t6657 + t6662;
  t6729 = -1.*t767*t393;
  t6731 = -1.*t280*t284*t623;
  t6736 = t6729 + t6731;
  t6741 = t2091*t6675;
  t6744 = t6736*t2346;
  t6745 = t6741 + t6744;
  t6788 = t2091*t6736;
  t6789 = -1.*t6675*t2346;
  t6793 = t6788 + t6789;
  t6795 = -1.*t2820*t6745;
  t6806 = t2767*t6793;
  t6812 = t6795 + t6806;
  t6824 = t2767*t6745;
  t6829 = t2820*t6793;
  t6838 = t6824 + t6829;
  t6962 = t148*t190;
  t6976 = -1.*t107*t280*t284;
  t7001 = t6962 + t6976;
  t7055 = t897*t7001;
  t7064 = -1.*t393*t4426*t1001;
  t7073 = t7055 + t7064;
  t7113 = t2091*t7073;
  t7116 = t4426*t623*t2346;
  t7126 = t7113 + t7116;
  t7149 = t2091*t4426*t623;
  t7153 = -1.*t7073*t2346;
  t7159 = t7149 + t7153;
  t7197 = -1.*t2820*t7126;
  t7199 = t2767*t7159;
  t7209 = t7197 + t7199;
  t7221 = t2767*t7126;
  t7225 = t2820*t7159;
  t7228 = t7221 + t7225;
  t7324 = t148*t190*t280;
  t7331 = -1.*t107*t284;
  t7332 = t7324 + t7331;
  t7373 = t897*t371;
  t7387 = -1.*t393*t7332*t1001;
  t7405 = t7373 + t7387;
  t7424 = t2091*t7405;
  t7439 = t7332*t623*t2346;
  t7444 = t7424 + t7439;
  t7471 = t2091*t7332*t623;
  t7486 = -1.*t7405*t2346;
  t7491 = t7471 + t7486;
  t7501 = -1.*t2820*t7444;
  t7515 = t2767*t7491;
  t7517 = t7501 + t7515;
  t7530 = t2767*t7444;
  t7543 = t2820*t7491;
  t7552 = t7530 + t7543;
  t7690 = -1.*t767*t897*t284;
  t7691 = -1.*t767*t148*t393*t1001;
  t7701 = t7690 + t7691;
  t7720 = t2091*t7701;
  t7727 = t767*t148*t623*t2346;
  t7730 = t7720 + t7727;
  t7743 = t767*t148*t2091*t623;
  t7746 = -1.*t7701*t2346;
  t7753 = t7743 + t7746;
  t7761 = -1.*t2820*t7730;
  t7773 = t2767*t7753;
  t7775 = t7761 + t7773;
  t7789 = t2767*t7730;
  t7792 = t2820*t7753;
  t7798 = t7789 + t7792;
  t7883 = -1.*t107*t767*t393;
  t7896 = -1.*t4161*t623;
  t7898 = t7883 + t7896;
  t7932 = -1.*t2091*t7898*t1001;
  t7943 = t4297*t2346;
  t7946 = t7932 + t7943;
  t7958 = t2091*t4297;
  t7972 = t7898*t1001*t2346;
  t7975 = t7958 + t7972;
  t7991 = -1.*t2820*t7946;
  t8000 = t2767*t7975;
  t8012 = t7991 + t8000;
  t8020 = t2767*t7946;
  t8024 = t2820*t7975;
  t8036 = t8020 + t8024;
  t7865 = 0.087004*t393;
  t7866 = -0.022225*t623;
  t7867 = t7865 + t7866;
  t7871 = 0.022225*t393;
  t7876 = t7871 + t831;
  t8082 = t107*t148;
  t8086 = t190*t280*t284;
  t8087 = t8082 + t8086;
  t8091 = -1.*t8087*t623;
  t8092 = t2527 + t8091;
  t8113 = t393*t8087;
  t8123 = -1.*t767*t190*t623;
  t8125 = t8113 + t8123;
  t8129 = -1.*t2091*t8092*t1001;
  t8131 = t8125*t2346;
  t8133 = t8129 + t8131;
  t8145 = t2091*t8125;
  t8162 = t8092*t1001*t2346;
  t8163 = t8145 + t8162;
  t8168 = -1.*t2820*t8133;
  t8170 = t2767*t8163;
  t8172 = t8168 + t8170;
  t8184 = t2767*t8133;
  t8200 = t2820*t8163;
  t8213 = t8184 + t8200;
  t8281 = t393*t280;
  t8293 = -1.*t767*t284*t623;
  t8302 = t8281 + t8293;
  t8316 = t767*t393*t284;
  t8318 = t280*t623;
  t8324 = t8316 + t8318;
  t8328 = -1.*t2091*t8302*t1001;
  t8330 = t8324*t2346;
  t8333 = t8328 + t8330;
  t8381 = t2091*t8324;
  t8383 = t8302*t1001*t2346;
  t8389 = t8381 + t8383;
  t8406 = -1.*t2820*t8333;
  t8407 = t2767*t8389;
  t8408 = t8406 + t8407;
  t8415 = t2767*t8333;
  t8422 = t2820*t8389;
  t8426 = t8415 + t8422;
  t8545 = -1.*t897*t4297;
  t8547 = -1.*t4426*t1001;
  t8556 = t8545 + t8547;
  t8596 = -1.*t2091*t2820*t8556;
  t8602 = -1.*t2767*t8556*t2346;
  t8603 = t8596 + t8602;
  t8611 = t2767*t2091*t8556;
  t8613 = -1.*t2820*t8556*t2346;
  t8621 = t8611 + t8613;
  t8482 = -0.157004*t897;
  t8484 = t8482 + t1052;
  t8494 = -0.31508*t897;
  t8495 = 0.157004*t1001;
  t8513 = t8494 + t8495;
  t8699 = -1.*t897*t8125;
  t8705 = -1.*t7332*t1001;
  t8708 = t8699 + t8705;
  t8747 = -1.*t2091*t2820*t8708;
  t8761 = -1.*t2767*t8708*t2346;
  t8768 = t8747 + t8761;
  t8782 = t2767*t2091*t8708;
  t8797 = -1.*t2820*t8708*t2346;
  t8804 = t8782 + t8797;
  t8870 = -1.*t897*t8324;
  t8894 = -1.*t767*t148*t1001;
  t8900 = t8870 + t8894;
  t8947 = -1.*t2091*t2820*t8900;
  t8965 = -1.*t2767*t8900*t2346;
  t8966 = t8947 + t8965;
  t8981 = t2767*t2091*t8900;
  t8994 = -1.*t2820*t8900*t2346;
  t9006 = t8981 + t8994;
  t9099 = -1.*t2091*t4608;
  t9105 = -1.*t4760*t2346;
  t9106 = t9099 + t9105;
  t9126 = t2820*t9106;
  t9130 = t9126 + t5078;
  t9136 = t2767*t9106;
  t9137 = -1.*t2820*t5027;
  t9158 = t9136 + t9137;
  t8711 = t897*t7332;
  t8714 = -1.*t8125*t1001;
  t8724 = t8711 + t8714;
  t9044 = -0.022225*t2091;
  t9057 = -0.38008*t2346;
  t9058 = t9044 + t9057;
  t9084 = 0.38008*t2091;
  t9093 = t9084 + t2349;
  t9236 = t767*t393*t190;
  t9239 = t8087*t623;
  t9244 = t9236 + t9239;
  t9271 = -1.*t2091*t8724;
  t9277 = -1.*t9244*t2346;
  t9279 = t9271 + t9277;
  t9292 = t2091*t9244;
  t9293 = -1.*t8724*t2346;
  t9294 = t9292 + t9293;
  t9310 = t2820*t9279;
  t9313 = t2767*t9294;
  t9314 = t9310 + t9313;
  t9340 = t2767*t9279;
  t9346 = -1.*t2820*t9294;
  t9356 = t9340 + t9346;
  t8912 = t767*t148*t897;
  t8918 = -1.*t8324*t1001;
  t8924 = t8912 + t8918;
  t9442 = -1.*t393*t280;
  t9472 = t767*t284*t623;
  t9477 = t9442 + t9472;
  t9486 = -1.*t2091*t8924;
  t9491 = -1.*t9477*t2346;
  t9495 = t9486 + t9491;
  t9509 = t2091*t9477;
  t9510 = -1.*t8924*t2346;
  t9511 = t9509 + t9510;
  t9516 = t2820*t9495;
  t9517 = t2767*t9511;
  t9526 = t9516 + t9517;
  t9531 = t2767*t9495;
  t9533 = -1.*t2820*t9511;
  t9536 = t9531 + t9533;
  t9679 = -1.*t2767*t4961;
  t9701 = t9679 + t9137;
  t5406 = t3284*t5090;
  t9638 = -0.022225*t2767;
  t9639 = -0.86008*t2820;
  t9645 = t9638 + t9639;
  t9657 = 0.86008*t2767;
  t9658 = t9657 + t2832;
  t9795 = t2091*t8724;
  t9796 = t9244*t2346;
  t9809 = t9795 + t9796;
  t9824 = -1.*t2820*t9809;
  t9825 = t9824 + t9313;
  t9828 = -1.*t2767*t9809;
  t9829 = t9828 + t9346;
  t9869 = t2091*t8924;
  t9873 = t9477*t2346;
  t9875 = t9869 + t9873;
  t9885 = -1.*t2820*t9875;
  t9886 = t9885 + t9517;
  t9889 = -1.*t2767*t9875;
  t9890 = t9889 + t9533;
  t9714 = -1.*t3329*t5090;
  t5413 = -1.*t3329*t5139;
  t5418 = t5406 + t5413;
  t9904 = 1.34008*t3284;
  t9906 = t9904 + t3583;
  t9909 = -0.021147*t3284;
  t9910 = -1.34008*t3329;
  t9912 = t9909 + t9910;
  t9836 = -1.*t3329*t9825;
  t9922 = t2767*t9809;
  t9926 = t2820*t9294;
  t9928 = t9922 + t9926;
  t9852 = t3284*t9825;
  t9894 = -1.*t3329*t9886;
  t9940 = t2767*t9875;
  t9942 = t2820*t9511;
  t9943 = t9940 + t9942;
  t9898 = t3284*t9886;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1288*t1334 + t2073*t2350 + t2578*t2756 + t2891*t2958 + t3128*t3198 + t3400*t3539 + t3598*t3694 - 1.400132*(t3329*t3539 + t3284*t3694) + 0.043805*(t3284*t3539 - 1.*t3329*t3694) + t371*t677 - 1.*t190*t767*t837 + t1062*t889 + 0.167004*(t1001*t1288 + t889*t897);
  p_output1(10)=t1062*t4297 + t1334*t4426 + t2350*t4608 + t2756*t4760 + t2891*t4961 + t3128*t5027 + t3400*t5090 + t3598*t5139 - 1.400132*(t3329*t5090 + t3284*t5139) + 0.043805*t5418 + t4161*t677 + t107*t767*t837 + 0.167004*(t1001*t4426 + t4297*t897);
  p_output1(11)=0;
  p_output1(12)=t1062*t5569 + t2350*t5829 + t2756*t5845 + t2891*t5877 + t3128*t5906 + t3400*t5964 + t3598*t6002 - 1.400132*(t3329*t5964 + t3284*t6002) + 0.043805*(t3284*t5964 - 1.*t3329*t6002) + t107*t1334*t148*t767 + t107*t284*t677*t767 - 1.*t107*t280*t837 + 0.167004*(t1001*t107*t148*t767 + t5569*t897);
  p_output1(13)=t1062*t6122 + t2350*t6286 + t2756*t6341 + t2891*t6378 + t3128*t6422 + t3400*t6461 + t3598*t6494 - 1.400132*(t3329*t6461 + t3284*t6494) + 0.043805*(t3284*t6461 - 1.*t3329*t6494) + t1334*t148*t190*t767 + t190*t284*t677*t767 - 1.*t190*t280*t837 + 0.167004*(t1001*t148*t190*t767 + t6122*t897);
  p_output1(14)=-1.*t1334*t148*t280 + t1062*t6620 + t2350*t6675 + t2756*t6736 + t2891*t6745 - 1.*t280*t284*t677 + t3128*t6793 + t3400*t6812 + t3598*t6838 - 1.400132*(t3329*t6812 + t3284*t6838) + 0.043805*(t3284*t6812 - 1.*t3329*t6838) - 1.*t767*t837 + 0.167004*(-1.*t1001*t148*t280 + t6620*t897);
  p_output1(15)=t1062*t393*t4426 + t2756*t4426*t623 + t4426*t677 + t1334*t7001 + t2350*t7073 + t2891*t7126 + t3128*t7159 + t3400*t7209 + t3598*t7228 - 1.400132*(t3329*t7209 + t3284*t7228) + 0.043805*(t3284*t7209 - 1.*t3329*t7228) + 0.167004*(t1001*t7001 + t393*t4426*t897);
  p_output1(16)=t1334*t371 + t1062*t393*t7332 + t2756*t623*t7332 + t677*t7332 + t2350*t7405 + t2891*t7444 + t3128*t7491 + t3400*t7517 + t3598*t7552 - 1.400132*(t3329*t7517 + t3284*t7552) + 0.043805*(t3284*t7517 - 1.*t3329*t7552) + 0.167004*(t1001*t371 + t393*t7332*t897);
  p_output1(17)=-1.*t1334*t284*t767 + t1062*t148*t393*t767 + t148*t2756*t623*t767 + t148*t677*t767 + t2350*t7701 + t2891*t7730 + t3128*t7753 + t3400*t7775 + t3598*t7798 - 1.400132*(t3329*t7775 + t3284*t7798) + 0.043805*(t3284*t7775 - 1.*t3329*t7798) + 0.167004*(-1.*t1001*t284*t767 + t148*t393*t767*t897);
  p_output1(18)=t2756*t4297 + t107*t767*t7867 + t4161*t7876 + t1062*t7898 - 1.*t1001*t2350*t7898 + t2891*t7946 + t3128*t7975 + t3400*t8012 + t3598*t8036 - 1.400132*(t3329*t8012 + t3284*t8036) + 0.043805*(t3284*t8012 - 1.*t3329*t8036) + 0.167004*t7898*t897;
  p_output1(19)=t190*t767*t7867 + t7876*t8087 + t1062*t8092 - 1.*t1001*t2350*t8092 + t2756*t8125 + t2891*t8133 + t3128*t8163 + t3400*t8172 + t3598*t8213 - 1.400132*(t3329*t8172 + t3284*t8213) + 0.043805*(t3284*t8172 - 1.*t3329*t8213) + 0.167004*t8092*t897;
  p_output1(20)=-1.*t280*t7867 + t284*t767*t7876 + t1062*t8302 - 1.*t1001*t2350*t8302 + t2756*t8324 + t2891*t8333 + t3128*t8389 + t3400*t8408 + t3598*t8426 - 1.400132*(t3329*t8408 + t3284*t8426) + 0.043805*(t3284*t8408 - 1.*t3329*t8426) + 0.167004*t8302*t897;
  p_output1(21)=0.167004*t4608 + t4426*t8484 + t4297*t8513 + t2350*t8556 + t2091*t2891*t8556 - 1.*t2346*t3128*t8556 + t3400*t8603 + t3598*t8621 - 1.400132*(t3329*t8603 + t3284*t8621) + 0.043805*(t3284*t8603 - 1.*t3329*t8621);
  p_output1(22)=t7332*t8484 + t8125*t8513 + t2350*t8708 + t2091*t2891*t8708 - 1.*t2346*t3128*t8708 + 0.167004*t8724 + t3400*t8768 + t3598*t8804 - 1.400132*(t3329*t8768 + t3284*t8804) + 0.043805*(t3284*t8768 - 1.*t3329*t8804);
  p_output1(23)=t148*t767*t8484 + t8324*t8513 + t2350*t8900 + t2091*t2891*t8900 - 1.*t2346*t3128*t8900 + 0.167004*t8924 + t3400*t8966 + t3598*t9006 - 1.400132*(t3329*t8966 + t3284*t9006) + 0.043805*(t3284*t8966 - 1.*t3329*t9006);
  p_output1(24)=t2891*t5027 + t4608*t9058 + t4760*t9093 + t3128*t9106 + t3598*t9130 + t3400*t9158 + 0.043805*(-1.*t3329*t9130 + t3284*t9158) - 1.400132*(t3284*t9130 + t3329*t9158);
  p_output1(25)=t8724*t9058 + t9093*t9244 + t3128*t9279 + t2891*t9294 + t3598*t9314 + t3400*t9356 + 0.043805*(-1.*t3329*t9314 + t3284*t9356) - 1.400132*(t3284*t9314 + t3329*t9356);
  p_output1(26)=t8924*t9058 + t9093*t9477 + t3128*t9495 + t2891*t9511 + t3598*t9526 + t3400*t9536 + 0.043805*(-1.*t3329*t9526 + t3284*t9536) - 1.400132*(t3284*t9526 + t3329*t9536);
  p_output1(27)=t3598*t5090 + t4961*t9645 + t5027*t9658 + t3400*t9701 - 1.400132*(t5406 + t3329*t9701) + 0.043805*(t3284*t9701 + t9714);
  p_output1(28)=t9294*t9658 + t9645*t9809 + t3598*t9825 + t3400*t9829 + 0.043805*(t3284*t9829 + t9836) - 1.400132*(t3329*t9829 + t9852);
  p_output1(29)=t9511*t9658 + t9645*t9875 + t3598*t9886 + t3400*t9890 + 0.043805*(t3284*t9890 + t9894) - 1.400132*(t3329*t9890 + t9898);
  p_output1(30)=-1.400132*t5418 + 0.043805*(-1.*t3284*t5139 + t9714) + t5090*t9906 + t5139*t9912;
  p_output1(31)=t9825*t9906 + t9912*t9928 + 0.043805*(t9836 - 1.*t3284*t9928) - 1.400132*(t9852 - 1.*t3329*t9928);
  p_output1(32)=t9886*t9906 + t9912*t9943 + 0.043805*(t9894 - 1.*t3284*t9943) - 1.400132*(t9898 - 1.*t3329*t9943);
  p_output1(33)=0;
  p_output1(34)=0;
  p_output1(35)=0;
  p_output1(36)=0;
  p_output1(37)=0;
  p_output1(38)=0;
  p_output1(39)=0;
  p_output1(40)=0;
  p_output1(41)=0;
  p_output1(42)=0;
  p_output1(43)=0;
  p_output1(44)=0;
  p_output1(45)=0;
  p_output1(46)=0;
  p_output1(47)=0;
}


       
void Jp_LeftFootBack(Eigen::Matrix<double,3,16> &p_output1, const Eigen::Matrix<double,16,1> &var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
